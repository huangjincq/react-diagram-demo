[{"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramCanvas/DiagramCanvas.js":"1","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Link/getEntityCoordinates.js":"2","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/LinksCanvas/LinksCanvas.js":"3","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Link/Link.js":"4","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Toolbar/Toolbar.tsx":"5","/Users/huangjin/Documents/work/person-project/react-mind-map/src/App.tsx":"6","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/NodesCanvas/NodesCanvas.js":"7","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/LinksCanvas/removeLinkFromArray.js":"8","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Segment/Segment.js":"9","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useNodeUnregistration.js":"10","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/getNodePortsId.js":"11","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramNode/portGenerator.js":"12","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useContextRegistration.js":"13","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/getPathMidpoint.js":"14","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/getRelativePoint.js":"15","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeList/NodeList.tsx":"16","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeList/NodeListItem.tsx":"17","/Users/huangjin/Documents/work/person-project/react-mind-map/src/index.tsx":"18","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/LinksCanvas/findInvolvedEntity.js":"19","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Context/DiagramContext.js":"20","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramNode/DiagramNode.js":"21","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Link/LinkLabel.js":"22","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useNodeRefs.js":"23","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useCanvas.js":"24","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/usePortRefs.js":"25","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useDrag.js":"26","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Diagram.js":"27"},{"size":2032,"mtime":1611186728462,"results":"28","hashOfConfig":"29"},{"size":852,"mtime":1611187577432,"results":"30","hashOfConfig":"29"},{"size":1646,"mtime":1611187019753,"results":"31","hashOfConfig":"29"},{"size":3110,"mtime":1611187215861,"results":"32","hashOfConfig":"29"},{"size":1460,"mtime":1611187515879,"results":"33","hashOfConfig":"29"},{"size":1912,"mtime":1611233612555,"results":"34","hashOfConfig":"29"},{"size":2044,"mtime":1611100639159,"results":"35","hashOfConfig":"29"},{"size":163,"mtime":1610546949870,"results":"36","hashOfConfig":"29"},{"size":831,"mtime":1610497565566,"results":"37","hashOfConfig":"29"},{"size":598,"mtime":1610497565596,"results":"38","hashOfConfig":"29"},{"size":367,"mtime":1610497565581,"results":"39","hashOfConfig":"29"},{"size":435,"mtime":1611102156945,"results":"40","hashOfConfig":"29"},{"size":1116,"mtime":1611101742995,"results":"41","hashOfConfig":"29"},{"size":304,"mtime":1610497565585,"results":"42","hashOfConfig":"29"},{"size":130,"mtime":1610497565588,"results":"43","hashOfConfig":"29"},{"size":414,"mtime":1611189022379,"results":"44","hashOfConfig":"29"},{"size":452,"mtime":1611233494921,"results":"45","hashOfConfig":"29"},{"size":500,"mtime":1610497175539,"results":"46","hashOfConfig":"29"},{"size":706,"mtime":1611186728466,"results":"47","hashOfConfig":"29"},{"size":108,"mtime":1610497565526,"results":"48","hashOfConfig":"29"},{"size":5499,"mtime":1611102138461,"results":"49","hashOfConfig":"29"},{"size":445,"mtime":1610497565548,"results":"50","hashOfConfig":"29"},{"size":284,"mtime":1610497565596,"results":"51","hashOfConfig":"29"},{"size":286,"mtime":1610497565593,"results":"52","hashOfConfig":"29"},{"size":284,"mtime":1610497565597,"results":"53","hashOfConfig":"29"},{"size":4797,"mtime":1610546949873,"results":"54","hashOfConfig":"29"},{"size":3302,"mtime":1611233657105,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"1la7djy",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"59"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramCanvas/DiagramCanvas.js",["119"],"import React, { useEffect, useRef, useState } from 'react'\n// import { useWindowScroll, useWindowResize } from 'beautiful-react-hooks';\nimport { isEqual } from 'lodash-es'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport DiagramContext from '../../Context/DiagramContext'\n\n/**\n * The DiagramCanvas component provides a context to the Diagram children.\n * The context contains the canvas bounding box (for future calculations) and the port references in order to\n * allow links to easily access to a the ports coordinates\n */\nconst DiagramCanvas = (props) => {\n  const { children, portRefs, nodeRefs, className, scale, ...rest } = props\n  const [bbox, setBoundingBox] = useState(null)\n  const canvasRef = useRef()\n  const classList = classNames('bi bi-diagram', className)\n\n  // calculate the given element bounding box and save it into the bbox state\n  const calculateBBox = (el) => {\n    if (el) {\n      const nextBBox = el.getBoundingClientRect()\n      nextBBox.el = el\n      if (!isEqual(nextBBox, bbox)) {\n        setBoundingBox(nextBBox)\n      }\n    }\n  }\n\n  // when the canvas is ready and placed within the DOM, save its bounding box to be provided down\n  // to children component as a context value for future calculations.\n  useEffect(() => calculateBBox(canvasRef.current), [canvasRef.current])\n  // same on window scroll and resize\n  // useWindowScroll(() => calculateBBox(canvasRef.current));\n  // useWindowResize(() => calculateBBox(canvasRef.current));\n\n  return (\n    <div className={classList} ref={canvasRef} {...rest} style={{ transform: `scale(${scale})` }}>\n      <DiagramContext.Provider value={{ canvas: bbox, ports: portRefs, nodes: nodeRefs, _nodes: {} }}>\n        {children}\n      </DiagramContext.Provider>\n    </div>\n  )\n}\n\nDiagramCanvas.propTypes = {\n  portRefs: PropTypes.shape({}),\n  nodeRefs: PropTypes.shape({}),\n  className: PropTypes.string,\n}\n\nDiagramCanvas.defaultProps = {\n  portRefs: {},\n  nodeRefs: {},\n  className: '',\n}\n\nexport default React.memo(DiagramCanvas)\n",["120","121"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Link/getEntityCoordinates.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/LinksCanvas/LinksCanvas.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Link/Link.js",["122","123","124"],"import React, { useEffect, useRef, useState, useCallback, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { LinkType, NodeType, PortType } from '../../shared/Types'\nimport usePortRefs from '../../shared/internal_hooks/usePortRefs'\nimport useCanvas from '../../shared/internal_hooks/useCanvas'\nimport getCoords from './getEntityCoordinates'\nimport makeSvgPath from '../../shared/functions/makeSvgPath'\nimport getPathMidpoint from '../../shared/functions/getPathMidpoint'\nimport useNodeRefs from '../../shared/internal_hooks/useNodeRefs'\nimport LinkLabel from './LinkLabel'\n\n// local hook, returns portRefs & nodeRefs\nconst useContextRefs = () => {\n  const canvas = useCanvas()\n  const portRefs = usePortRefs()\n  const nodeRefs = useNodeRefs()\n\n  return { canvas, nodeRefs, portRefs }\n}\n\n/**\n * A Diagram link component displays the link between two diagram nodes or two node ports.\n */\nconst Link = (props) => {\n  const { input, output, link, onDelete } = props\n  const pathRef = useRef()\n  const [labelPosition, setLabelPosition] = useState()\n  const { canvas, portRefs, nodeRefs } = useContextRefs()\n  const inputPoint = useMemo(() => getCoords(input, portRefs, nodeRefs, canvas), [input, portRefs, nodeRefs, canvas])\n  /* eslint-disable max-len */\n  const classList = useMemo(() => classNames('bi-diagram-link', { 'readonly-link': link.readonly }, link.className), [\n    link.readonly,\n    link.className\n  ])\n  const outputPoint = useMemo(() => getCoords(output, portRefs, nodeRefs, canvas), [output, portRefs, nodeRefs, canvas])\n  /* eslint-enable max-len */\n  const pathOptions = {\n    type: input.type === 'port' || output.type === 'port' ? 'bezier' : 'curve',\n    inputAlignment: input.entity.alignment || null,\n    outputAlignment: output.entity.alignment || null\n  }\n\n  const path = useMemo(() => makeSvgPath(inputPoint, outputPoint, pathOptions), [inputPoint, outputPoint])\n\n  // calculates label position\n  useEffect(() => {\n    if (link.label && inputPoint && outputPoint && pathRef.current) {\n      const pos = getPathMidpoint(pathRef.current)\n      setLabelPosition(pos)\n    }\n  }, [pathRef.current, link.label, inputPoint, outputPoint])\n\n  // on link delete\n  const onDoubleClick = useCallback(() => {\n    if (onDelete && !link.readonly) {\n      onDelete(link)\n    }\n  }, [link.readonly, onDelete])\n\n  return (\n    <g className={classList}>\n      {!link.readonly && <path d={path} className=\"bi-link-ghost\" onDoubleClick={onDoubleClick}/>}\n      <path d={path} ref={pathRef} className=\"bi-link-path\" onDoubleClick={onDoubleClick}/>\n      {link.label && labelPosition && <LinkLabel position={labelPosition} label={link.label}/>}\n    </g>\n  )\n}\n\nconst InvolvedEntity = PropTypes.exact({\n  type: PropTypes.oneOf(['node', 'port']),\n  entity: PropTypes.oneOfType([PortType, NodeType]),\n  parentNodeInfo: NodeType\n})\n\nLink.propTypes = {\n  link: LinkType.isRequired,\n  input: InvolvedEntity.isRequired,\n  output: InvolvedEntity.isRequired,\n  onDelete: PropTypes.func\n}\n\nLink.defaultProps = {\n  onDelete: undefined\n}\n\nexport default React.memo(Link)\n","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Toolbar/Toolbar.tsx",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/App.tsx",["125"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/NodesCanvas/NodesCanvas.js",[],["126","127"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/LinksCanvas/removeLinkFromArray.js",[],["128","129"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Segment/Segment.js",["130"],"import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { PortAlignment } from '../../shared/Types';\nimport makeSvgPath from '../../shared/functions/makeSvgPath';\n\n/**\n * Segment\n */\nconst Segment = (props) => {\n  const { from, to, alignment } = props;\n  const pathOptions = { type: 'bezier', inputAlignment: alignment };\n  const path = useMemo(() => makeSvgPath(from, to, pathOptions), [from, to, alignment]);\n\n  return (\n    <g className=\"bi-diagram-segment\">\n      <path d={path} />\n      <circle r=\"6.5\" cx={to[0]} cy={to[1]} />\n    </g>\n  );\n};\n\nSegment.propTypes = {\n  from: PropTypes.arrayOf(PropTypes.number).isRequired,\n  to: PropTypes.arrayOf(PropTypes.number).isRequired,\n  alignment: PortAlignment,\n};\n\nSegment.defaultProps = {\n  alignment: undefined,\n};\n\nexport default React.memo(Segment);\n","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useNodeUnregistration.js",["131"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/getNodePortsId.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramNode/portGenerator.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useContextRegistration.js",["132","133","134","135","136","137"],"import { useCallback, useEffect, useContext } from 'react';\nimport DiagramContext from '../../Context/DiagramContext';\n\n/**\n * Returns a callback that will perform the onPortRegister function when the context is ready (canvas exists)\n * and there's at least one input or one output\n */\nexport const usePortRegistration = (inputs, outputs, onPortRegister) => {\n  const { canvas, ports } = useContext(DiagramContext);\n\n  return useCallback((portId, portElement) => {\n    if (canvas && (inputs || outputs)) {\n      if (ports && !ports[portId]) {\n        onPortRegister(portId, portElement);\n      }\n    }\n  }, [!!canvas, !!ports, inputs, outputs]);\n};\n\n/**\n * Takes a dom reference and an onNodeRegister callback and perform the callback when the node is mounted\n * and the canvas is ready\n */\nexport const useNodeRegistration = (ref, onNodeRegister, id) => {\n  const { canvas, nodes } = useContext(DiagramContext);\n\n  useEffect(() => {\n    if (onNodeRegister && ref.current && canvas && nodes && !nodes[id]) {\n      onNodeRegister(id, ref.current);\n    }\n  }, [ref.current, onNodeRegister, !!canvas, !!nodes, id]);\n};\n","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/getPathMidpoint.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/getRelativePoint.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeList/NodeList.tsx",["138","139","140","141","142"],"import React, {useMemo, useState} from 'react'\nimport {Button, Popover} from \"antd\";\n\nimport \"./style.scss\"\nimport {NodeListItem} from \"./NodeListItem\";\n\nexport interface NodeListProps {\n\n}\n\n\nexport const NodeList: React.FC<NodeListProps> = ({}) => {\n\n\n  return (\n    <div className=\"node-list\">\n      <NodeListItem/>\n      <NodeListItem/>\n      <NodeListItem/>\n    </div>\n  )\n}\n\nNodeList.displayName = 'NodeList'\n",["143","144"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeList/NodeListItem.tsx",["145"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/index.tsx",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/LinksCanvas/findInvolvedEntity.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Context/DiagramContext.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramNode/DiagramNode.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Link/LinkLabel.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useNodeRefs.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useCanvas.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/usePortRefs.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useDrag.js",["146","147","148","149","150","151"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Diagram.js",["152"],{"ruleId":"153","severity":1,"message":"154","line":32,"column":53,"nodeType":"155","endLine":32,"endColumn":72,"suggestions":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"153","severity":1,"message":"161","line":44,"column":81,"nodeType":"155","endLine":44,"endColumn":106,"suggestions":"162"},{"ruleId":"153","severity":1,"message":"163","line":52,"column":6,"nodeType":"155","endLine":52,"endColumn":60,"suggestions":"164"},{"ruleId":"153","severity":1,"message":"165","line":59,"column":6,"nodeType":"155","endLine":59,"endColumn":31,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":49,"column":46,"nodeType":"169","messageId":"170","endLine":49,"endColumn":51},{"ruleId":"157","replacedBy":"171"},{"ruleId":"159","replacedBy":"172"},{"ruleId":"157","replacedBy":"173"},{"ruleId":"159","replacedBy":"174"},{"ruleId":"153","severity":1,"message":"161","line":12,"column":66,"nodeType":"155","endLine":12,"endColumn":87,"suggestions":"175"},{"ruleId":"153","severity":1,"message":"176","line":15,"column":6,"nodeType":"155","endLine":15,"endColumn":8,"suggestions":"177"},{"ruleId":"153","severity":1,"message":"178","line":17,"column":6,"nodeType":"155","endLine":17,"endColumn":42,"suggestions":"179"},{"ruleId":"153","severity":1,"message":"180","line":17,"column":7,"nodeType":"181","endLine":17,"endColumn":15},{"ruleId":"153","severity":1,"message":"180","line":17,"column":17,"nodeType":"181","endLine":17,"endColumn":24},{"ruleId":"153","severity":1,"message":"182","line":31,"column":6,"nodeType":"155","endLine":31,"endColumn":58,"suggestions":"183"},{"ruleId":"153","severity":1,"message":"184","line":31,"column":36,"nodeType":"181","endLine":31,"endColumn":44},{"ruleId":"153","severity":1,"message":"184","line":31,"column":46,"nodeType":"181","endLine":31,"endColumn":53},{"ruleId":"167","severity":1,"message":"185","line":1,"column":16,"nodeType":"169","messageId":"170","endLine":1,"endColumn":23},{"ruleId":"167","severity":1,"message":"186","line":1,"column":25,"nodeType":"169","messageId":"170","endLine":1,"endColumn":33},{"ruleId":"167","severity":1,"message":"187","line":2,"column":9,"nodeType":"169","messageId":"170","endLine":2,"endColumn":15},{"ruleId":"167","severity":1,"message":"188","line":2,"column":17,"nodeType":"169","messageId":"170","endLine":2,"endColumn":24},{"ruleId":"189","severity":1,"message":"190","line":12,"column":51,"nodeType":"191","messageId":"192","endLine":12,"endColumn":53},{"ruleId":"157","replacedBy":"171"},{"ruleId":"159","replacedBy":"172"},{"ruleId":"189","severity":1,"message":"190","line":11,"column":70,"nodeType":"191","messageId":"192","endLine":11,"endColumn":72},{"ruleId":"153","severity":1,"message":"193","line":37,"column":5,"nodeType":"155","endLine":37,"endColumn":18,"suggestions":"194"},{"ruleId":"153","severity":1,"message":"195","line":109,"column":5,"nodeType":"155","endLine":109,"endColumn":59,"suggestions":"196"},{"ruleId":"153","severity":1,"message":"197","line":115,"column":18,"nodeType":"169","endLine":115,"endColumn":29},{"ruleId":"153","severity":1,"message":"198","line":142,"column":5,"nodeType":"155","endLine":142,"endColumn":57,"suggestions":"199"},{"ruleId":"153","severity":1,"message":"200","line":163,"column":19,"nodeType":"169","endLine":163,"endColumn":26},{"ruleId":"153","severity":1,"message":"201","line":168,"column":6,"nodeType":"155","endLine":168,"endColumn":25,"suggestions":"202"},{"ruleId":"153","severity":1,"message":"203","line":46,"column":6,"nodeType":"155","endLine":46,"endColumn":8,"suggestions":"204"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'calculateBBox'. Either include it or remove the dependency array. Mutable values like 'canvasRef.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["205"],"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"React Hook useMemo has a missing dependency: 'pathOptions'. Either include it or remove the dependency array.",["208"],"React Hook useEffect has an unnecessary dependency: 'pathRef.current'. Either exclude it or remove the dependency array. Mutable values like 'pathRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["209"],"React Hook useCallback has a missing dependency: 'link'. Either include it or remove the dependency array.",["210"],"@typescript-eslint/no-unused-vars","'clear' is assigned a value but never used.","Identifier","unusedVar",["206"],["207"],["206"],["207"],["211"],"React Hook useEffect has missing dependencies: 'id', 'inputs', 'onNodeRemove', and 'outputs'. Either include them or remove the dependency array. If 'onNodeRemove' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["212"],"React Hook useCallback has missing dependencies: 'canvas', 'onPortRegister', and 'ports'. Either include them or remove the dependency array. If 'onPortRegister' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["213"],"React Hook useCallback has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","UnaryExpression","React Hook useEffect has missing dependencies: 'canvas', 'nodes', and 'ref'. Either include them or remove the dependency array. Mutable values like 'ref.current' aren't valid dependencies because mutating them doesn't re-render the component.",["214"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","'useMemo' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'Popover' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useCallback has a missing dependency: 'ref'. Either include it or remove the dependency array. Mutable values like 'ref.current' aren't valid dependencies because mutating them doesn't re-render the component.",["215"],"React Hook useCallback has a missing dependency: 'targetRef'. Either include it or remove the dependency array. Mutable values like 'targetRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["216"],"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","React Hook useCallback has unnecessary dependencies: 'dragEndHandlerRef.current' and 'targetRef.current'. Either exclude them or remove the dependency array. Mutable values like 'targetRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["217"],"The ref value 'targetRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'targetRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has missing dependencies: 'onDrag', 'onDragEnd', 'onDragStart', and 'targetRef'. Either include them or remove the dependency array. Mutable values like 'targetRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["218"],"React Hook useCallback has missing dependencies: 'nodeRefs' and 'portRefs'. Either include them or remove the dependency array.",["219"],{"desc":"220","fix":"221"},"no-global-assign","no-unsafe-negation",{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},"Update the dependencies array to be: [calculateBBox]",{"range":"246","text":"247"},"Update the dependencies array to be: [inputPoint, outputPoint, pathOptions]",{"range":"248","text":"249"},"Update the dependencies array to be: [link.label, inputPoint, outputPoint]",{"range":"250","text":"251"},"Update the dependencies array to be: [link, onDelete]",{"range":"252","text":"253"},"Update the dependencies array to be: [from, to, pathOptions]",{"range":"254","text":"255"},"Update the dependencies array to be: [id, inputs, onNodeRemove, outputs]",{"range":"256","text":"257"},"Update the dependencies array to be: [canvas, inputs, onPortRegister, outputs, ports]",{"range":"258","text":"259"},"Update the dependencies array to be: [onNodeRegister, id, ref, canvas, nodes]",{"range":"260","text":"261"},"Update the dependencies array to be: [ref]",{"range":"262","text":"263"},"Update the dependencies array to be: [info, targetRef]",{"range":"264","text":"265"},"Update the dependencies array to be: [info]",{"range":"266","text":"267"},"Update the dependencies array to be: [onDrag, onDragEnd, onDragStart, targetRef]",{"range":"268","text":"269"},"Update the dependencies array to be: [nodeRefs, portRefs]",{"range":"270","text":"271"},[1313,1332],"[calculateBBox]",[1910,1935],"[inputPoint, outputPoint, pathOptions]",[2149,2203],"[link.label, inputPoint, outputPoint]",[2340,2365],"[link, onDelete]",[414,435],"[from, to, pathOptions]",[551,553],"[id, inputs, onNodeRemove, outputs]",[607,643],"[canvas, inputs, onPortRegister, outputs, ports]",[1058,1110],"[onNodeRegister, id, ref, canvas, nodes]",[843,856],"[ref]",[2766,2820],"[info, targetRef]",[3701,3753],"[info]",[4557,4576],"[onDrag, onDragEnd, onDragStart, targetRef]",[1750,1752],"[nodeRefs, portRefs]"]