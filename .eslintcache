[{"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramCanvas/DiagramCanvas.js":"1","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Link/getEntityCoordinates.js":"2","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/LinksCanvas/LinksCanvas.js":"3","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Link/Link.js":"4","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Toolbar/Toolbar.tsx":"5","/Users/huangjin/Documents/work/person-project/react-mind-map/src/App.tsx":"6","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/NodesCanvas/NodesCanvas.js":"7","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/LinksCanvas/removeLinkFromArray.js":"8","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Segment/Segment.js":"9","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useNodeUnregistration.js":"10","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/getNodePortsId.js":"11","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramNode/portGenerator.js":"12","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useContextRegistration.js":"13","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/getPathMidpoint.js":"14","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/getRelativePoint.js":"15","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeList/NodeList.tsx":"16","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeList/NodeListItem.tsx":"17"},{"size":2032,"mtime":1611186728462,"results":"18","hashOfConfig":"19"},{"size":852,"mtime":1611187577432,"results":"20","hashOfConfig":"19"},{"size":1646,"mtime":1611187019753,"results":"21","hashOfConfig":"19"},{"size":3110,"mtime":1611187215861,"results":"22","hashOfConfig":"19"},{"size":1460,"mtime":1611187515879,"results":"23","hashOfConfig":"19"},{"size":1912,"mtime":1611188095022,"results":"24","hashOfConfig":"19"},{"size":2044,"mtime":1611100639159,"results":"25","hashOfConfig":"19"},{"size":163,"mtime":1610546949870,"results":"26","hashOfConfig":"19"},{"size":831,"mtime":1610497565566,"results":"27","hashOfConfig":"19"},{"size":598,"mtime":1610497565596,"results":"28","hashOfConfig":"19"},{"size":367,"mtime":1610497565581,"results":"29","hashOfConfig":"19"},{"size":435,"mtime":1611102156945,"results":"30","hashOfConfig":"19"},{"size":1116,"mtime":1611101742995,"results":"31","hashOfConfig":"19"},{"size":304,"mtime":1610497565585,"results":"32","hashOfConfig":"19"},{"size":130,"mtime":1610497565588,"results":"33","hashOfConfig":"19"},{"size":414,"mtime":1611189022379,"results":"34","hashOfConfig":"19"},{"size":451,"mtime":1611189473748,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"1la7djy",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramCanvas/DiagramCanvas.js",["73"],"import React, { useEffect, useRef, useState } from 'react'\n// import { useWindowScroll, useWindowResize } from 'beautiful-react-hooks';\nimport { isEqual } from 'lodash-es'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport DiagramContext from '../../Context/DiagramContext'\n\n/**\n * The DiagramCanvas component provides a context to the Diagram children.\n * The context contains the canvas bounding box (for future calculations) and the port references in order to\n * allow links to easily access to a the ports coordinates\n */\nconst DiagramCanvas = (props) => {\n  const { children, portRefs, nodeRefs, className, scale, ...rest } = props\n  const [bbox, setBoundingBox] = useState(null)\n  const canvasRef = useRef()\n  const classList = classNames('bi bi-diagram', className)\n\n  // calculate the given element bounding box and save it into the bbox state\n  const calculateBBox = (el) => {\n    if (el) {\n      const nextBBox = el.getBoundingClientRect()\n      nextBBox.el = el\n      if (!isEqual(nextBBox, bbox)) {\n        setBoundingBox(nextBBox)\n      }\n    }\n  }\n\n  // when the canvas is ready and placed within the DOM, save its bounding box to be provided down\n  // to children component as a context value for future calculations.\n  useEffect(() => calculateBBox(canvasRef.current), [canvasRef.current])\n  // same on window scroll and resize\n  // useWindowScroll(() => calculateBBox(canvasRef.current));\n  // useWindowResize(() => calculateBBox(canvasRef.current));\n\n  return (\n    <div className={classList} ref={canvasRef} {...rest} style={{ transform: `scale(${scale})` }}>\n      <DiagramContext.Provider value={{ canvas: bbox, ports: portRefs, nodes: nodeRefs, _nodes: {} }}>\n        {children}\n      </DiagramContext.Provider>\n    </div>\n  )\n}\n\nDiagramCanvas.propTypes = {\n  portRefs: PropTypes.shape({}),\n  nodeRefs: PropTypes.shape({}),\n  className: PropTypes.string,\n}\n\nDiagramCanvas.defaultProps = {\n  portRefs: {},\n  nodeRefs: {},\n  className: '',\n}\n\nexport default React.memo(DiagramCanvas)\n",["74","75"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Link/getEntityCoordinates.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/LinksCanvas/LinksCanvas.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Link/Link.js",["76","77","78"],"import React, { useEffect, useRef, useState, useCallback, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { LinkType, NodeType, PortType } from '../../shared/Types'\nimport usePortRefs from '../../shared/internal_hooks/usePortRefs'\nimport useCanvas from '../../shared/internal_hooks/useCanvas'\nimport getCoords from './getEntityCoordinates'\nimport makeSvgPath from '../../shared/functions/makeSvgPath'\nimport getPathMidpoint from '../../shared/functions/getPathMidpoint'\nimport useNodeRefs from '../../shared/internal_hooks/useNodeRefs'\nimport LinkLabel from './LinkLabel'\n\n// local hook, returns portRefs & nodeRefs\nconst useContextRefs = () => {\n  const canvas = useCanvas()\n  const portRefs = usePortRefs()\n  const nodeRefs = useNodeRefs()\n\n  return { canvas, nodeRefs, portRefs }\n}\n\n/**\n * A Diagram link component displays the link between two diagram nodes or two node ports.\n */\nconst Link = (props) => {\n  const { input, output, link, onDelete } = props\n  const pathRef = useRef()\n  const [labelPosition, setLabelPosition] = useState()\n  const { canvas, portRefs, nodeRefs } = useContextRefs()\n  const inputPoint = useMemo(() => getCoords(input, portRefs, nodeRefs, canvas), [input, portRefs, nodeRefs, canvas])\n  /* eslint-disable max-len */\n  const classList = useMemo(() => classNames('bi-diagram-link', { 'readonly-link': link.readonly }, link.className), [\n    link.readonly,\n    link.className\n  ])\n  const outputPoint = useMemo(() => getCoords(output, portRefs, nodeRefs, canvas), [output, portRefs, nodeRefs, canvas])\n  /* eslint-enable max-len */\n  const pathOptions = {\n    type: input.type === 'port' || output.type === 'port' ? 'bezier' : 'curve',\n    inputAlignment: input.entity.alignment || null,\n    outputAlignment: output.entity.alignment || null\n  }\n\n  const path = useMemo(() => makeSvgPath(inputPoint, outputPoint, pathOptions), [inputPoint, outputPoint])\n\n  // calculates label position\n  useEffect(() => {\n    if (link.label && inputPoint && outputPoint && pathRef.current) {\n      const pos = getPathMidpoint(pathRef.current)\n      setLabelPosition(pos)\n    }\n  }, [pathRef.current, link.label, inputPoint, outputPoint])\n\n  // on link delete\n  const onDoubleClick = useCallback(() => {\n    if (onDelete && !link.readonly) {\n      onDelete(link)\n    }\n  }, [link.readonly, onDelete])\n\n  return (\n    <g className={classList}>\n      {!link.readonly && <path d={path} className=\"bi-link-ghost\" onDoubleClick={onDoubleClick}/>}\n      <path d={path} ref={pathRef} className=\"bi-link-path\" onDoubleClick={onDoubleClick}/>\n      {link.label && labelPosition && <LinkLabel position={labelPosition} label={link.label}/>}\n    </g>\n  )\n}\n\nconst InvolvedEntity = PropTypes.exact({\n  type: PropTypes.oneOf(['node', 'port']),\n  entity: PropTypes.oneOfType([PortType, NodeType]),\n  parentNodeInfo: NodeType\n})\n\nLink.propTypes = {\n  link: LinkType.isRequired,\n  input: InvolvedEntity.isRequired,\n  output: InvolvedEntity.isRequired,\n  onDelete: PropTypes.func\n}\n\nLink.defaultProps = {\n  onDelete: undefined\n}\n\nexport default React.memo(Link)\n","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Toolbar/Toolbar.tsx",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/App.tsx",["79"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/NodesCanvas/NodesCanvas.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/LinksCanvas/removeLinkFromArray.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Segment/Segment.js",["80"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useNodeUnregistration.js",["81"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/getNodePortsId.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramNode/portGenerator.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useContextRegistration.js",["82","83","84","85","86","87"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/getPathMidpoint.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/getRelativePoint.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeList/NodeList.tsx",["88","89","90","91","92"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeList/NodeListItem.tsx",["93"],{"ruleId":"94","severity":1,"message":"95","line":32,"column":53,"nodeType":"96","endLine":32,"endColumn":72,"suggestions":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"94","severity":1,"message":"102","line":44,"column":81,"nodeType":"96","endLine":44,"endColumn":106,"suggestions":"103"},{"ruleId":"94","severity":1,"message":"104","line":52,"column":6,"nodeType":"96","endLine":52,"endColumn":60,"suggestions":"105"},{"ruleId":"94","severity":1,"message":"106","line":59,"column":6,"nodeType":"96","endLine":59,"endColumn":31,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":49,"column":46,"nodeType":"110","messageId":"111","endLine":49,"endColumn":51},{"ruleId":"94","severity":1,"message":"102","line":12,"column":66,"nodeType":"96","endLine":12,"endColumn":87,"suggestions":"112"},{"ruleId":"94","severity":1,"message":"113","line":15,"column":6,"nodeType":"96","endLine":15,"endColumn":8,"suggestions":"114"},{"ruleId":"94","severity":1,"message":"115","line":17,"column":6,"nodeType":"96","endLine":17,"endColumn":42,"suggestions":"116"},{"ruleId":"94","severity":1,"message":"117","line":17,"column":7,"nodeType":"118","endLine":17,"endColumn":15},{"ruleId":"94","severity":1,"message":"117","line":17,"column":17,"nodeType":"118","endLine":17,"endColumn":24},{"ruleId":"94","severity":1,"message":"119","line":31,"column":6,"nodeType":"96","endLine":31,"endColumn":58,"suggestions":"120"},{"ruleId":"94","severity":1,"message":"121","line":31,"column":36,"nodeType":"118","endLine":31,"endColumn":44},{"ruleId":"94","severity":1,"message":"121","line":31,"column":46,"nodeType":"118","endLine":31,"endColumn":53},{"ruleId":"108","severity":1,"message":"122","line":1,"column":16,"nodeType":"110","messageId":"111","endLine":1,"endColumn":23},{"ruleId":"108","severity":1,"message":"123","line":1,"column":25,"nodeType":"110","messageId":"111","endLine":1,"endColumn":33},{"ruleId":"108","severity":1,"message":"124","line":2,"column":9,"nodeType":"110","messageId":"111","endLine":2,"endColumn":15},{"ruleId":"108","severity":1,"message":"125","line":2,"column":17,"nodeType":"110","messageId":"111","endLine":2,"endColumn":24},{"ruleId":"126","severity":1,"message":"127","line":12,"column":51,"nodeType":"128","messageId":"129","endLine":12,"endColumn":53},{"ruleId":"126","severity":1,"message":"127","line":11,"column":70,"nodeType":"128","messageId":"129","endLine":11,"endColumn":72},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'calculateBBox'. Either include it or remove the dependency array. Mutable values like 'canvasRef.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["130"],"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"React Hook useMemo has a missing dependency: 'pathOptions'. Either include it or remove the dependency array.",["133"],"React Hook useEffect has an unnecessary dependency: 'pathRef.current'. Either exclude it or remove the dependency array. Mutable values like 'pathRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["134"],"React Hook useCallback has a missing dependency: 'link'. Either include it or remove the dependency array.",["135"],"@typescript-eslint/no-unused-vars","'clear' is assigned a value but never used.","Identifier","unusedVar",["136"],"React Hook useEffect has missing dependencies: 'id', 'inputs', 'onNodeRemove', and 'outputs'. Either include them or remove the dependency array. If 'onNodeRemove' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["137"],"React Hook useCallback has missing dependencies: 'canvas', 'onPortRegister', and 'ports'. Either include them or remove the dependency array. If 'onPortRegister' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["138"],"React Hook useCallback has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","UnaryExpression","React Hook useEffect has missing dependencies: 'canvas', 'nodes', and 'ref'. Either include them or remove the dependency array. Mutable values like 'ref.current' aren't valid dependencies because mutating them doesn't re-render the component.",["139"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","'useMemo' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'Popover' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",{"desc":"140","fix":"141"},"no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [calculateBBox]",{"range":"156","text":"157"},"Update the dependencies array to be: [inputPoint, outputPoint, pathOptions]",{"range":"158","text":"159"},"Update the dependencies array to be: [link.label, inputPoint, outputPoint]",{"range":"160","text":"161"},"Update the dependencies array to be: [link, onDelete]",{"range":"162","text":"163"},"Update the dependencies array to be: [from, to, pathOptions]",{"range":"164","text":"165"},"Update the dependencies array to be: [id, inputs, onNodeRemove, outputs]",{"range":"166","text":"167"},"Update the dependencies array to be: [canvas, inputs, onPortRegister, outputs, ports]",{"range":"168","text":"169"},"Update the dependencies array to be: [onNodeRegister, id, ref, canvas, nodes]",{"range":"170","text":"171"},[1313,1332],"[calculateBBox]",[1910,1935],"[inputPoint, outputPoint, pathOptions]",[2149,2203],"[link.label, inputPoint, outputPoint]",[2340,2365],"[link, onDelete]",[414,435],"[from, to, pathOptions]",[551,553],"[id, inputs, onNodeRemove, outputs]",[607,643],"[canvas, inputs, onPortRegister, outputs, ports]",[1058,1110],"[onNodeRegister, id, ref, canvas, nodes]"]