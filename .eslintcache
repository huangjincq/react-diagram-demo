[{"/Users/huangjin/Documents/work/person-project/react-mind-map/src/App.tsx":"1","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramNode/DiagramNode.tsx":"2","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeTypes/helper.ts":"3","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeTypes/NodeTypeInput.tsx":"4","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeList/NodeList.tsx":"5","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeList/NodeListItem.tsx":"6","/Users/huangjin/Documents/work/person-project/react-mind-map/src/hooks/useHistory.ts":"7","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeTypes/NodeTypeSelect.tsx":"8","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramNode/portGenerator.js":"9","/Users/huangjin/Documents/work/person-project/react-mind-map/src/reportWebVitals.ts":"10","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Toolbar/Toolbar.tsx":"11","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Segment.tsx":"12","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Link.tsx":"13","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Port.tsx":"14","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/index.tsx":"15","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/NodesCanvas.tsx":"16","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramCanvas.tsx":"17","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Context/DiagramContext.ts":"18","/Users/huangjin/Documents/work/person-project/react-mind-map/src/hooks/useCanvas.js":"19","/Users/huangjin/Documents/work/person-project/react-mind-map/src/hooks/useDrag.js":"20","/Users/huangjin/Documents/work/person-project/react-mind-map/src/hooks/useNodeRefs.js":"21","/Users/huangjin/Documents/work/person-project/react-mind-map/src/utils/getNodePortsId.js":"22"},{"size":2532,"mtime":1611452657994,"results":"23","hashOfConfig":"24"},{"size":3571,"mtime":1611532677871,"results":"25","hashOfConfig":"24"},{"size":961,"mtime":1611390449008,"results":"26","hashOfConfig":"24"},{"size":627,"mtime":1611416172786,"results":"27","hashOfConfig":"24"},{"size":466,"mtime":1611389215067,"results":"28","hashOfConfig":"24"},{"size":655,"mtime":1611389696771,"results":"29","hashOfConfig":"24"},{"size":2453,"mtime":1611101215414,"results":"30","hashOfConfig":"24"},{"size":821,"mtime":1611532569788,"results":"31","hashOfConfig":"24"},{"size":430,"mtime":1611417435554,"results":"32","hashOfConfig":"24"},{"size":425,"mtime":1610497175540,"results":"33","hashOfConfig":"24"},{"size":1460,"mtime":1611187515879,"results":"34","hashOfConfig":"24"},{"size":613,"mtime":1611417839504,"results":"35","hashOfConfig":"24"},{"size":2773,"mtime":1611418243092,"results":"36","hashOfConfig":"24"},{"size":1940,"mtime":1611532764141,"results":"37","hashOfConfig":"24"},{"size":3249,"mtime":1611452987589,"results":"38","hashOfConfig":"24"},{"size":2227,"mtime":1611454253503,"results":"39","hashOfConfig":"24"},{"size":1668,"mtime":1611417435561,"results":"40","hashOfConfig":"24"},{"size":312,"mtime":1611413644564,"results":"41","hashOfConfig":"24"},{"size":294,"mtime":1611418117195,"results":"42","hashOfConfig":"24"},{"size":4928,"mtime":1611532477668,"results":"43","hashOfConfig":"24"},{"size":292,"mtime":1611418117194,"results":"44","hashOfConfig":"24"},{"size":367,"mtime":1610497565581,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1la7djy",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/huangjin/Documents/work/person-project/react-mind-map/src/App.tsx",["100"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramNode/DiagramNode.tsx",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeTypes/helper.ts",[],["101","102"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeTypes/NodeTypeInput.tsx",["103","104","105"],"import React, { ChangeEvent, useMemo, useState } from 'react'\nimport { Input } from 'antd'\n\nimport './style.scss'\nimport { INodeItemProps } from '../../types'\n\nexport interface NodeTypeInputProps extends INodeItemProps<any> {\n}\n\n\nexport const NodeTypeInput: React.FC<NodeTypeInputProps> = (props) => {\n\n  const {value, onChange} = props\n  const handleInputChange = (e: any) => {\n    onChange({\n      ...value,\n      inputValue: e.target.value\n    })\n  }\n\n  return (\n    <>\n      <Input value={value.inputValue} onChange={handleInputChange} placeholder=\"Basic usage\"/>\n    </>\n  )\n}\n\nNodeTypeInput.displayName = 'NodeTypeInput'\n",["106","107"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeList/NodeList.tsx",[],["108","109"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeList/NodeListItem.tsx",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/hooks/useHistory.ts",["110"],"import {useReducer, useCallback} from 'react';\n\n\n// 初始化useReducer中的state\nconst initialState = {\n  // 当我们每次添加新state时，用来储存更新前状态的数组\n  past: [],\n  // 当前的state值\n  present: null,\n  // 让我们可以用使用重做功能的，future数组\n  future: []\n};\n\n// 根据action处理state的改变\nconst reducer = (state: any, action: any) => {\n  const {past, present, future} = state;\n  const {newPresent} = action;\n\n\n  switch (action.type) {\n    case 'UNDO':\n      const previous = past[past.length - 1];\n      const newPast = past.slice(0, past.length - 1);\n\n      return {\n        past: newPast,\n        present: previous,\n        future: [present, ...future]\n      };\n    case 'REDO':\n      const next = future[0];\n      const newFuture = future.slice(1);\n\n      return {\n        past: [...past, present],\n        present: next,\n        future: newFuture\n      };\n    case 'SET':\n      // if (newPresent === present) {\n      //   return state;\n      // }\n      return {\n        past: [...past],\n        present: newPresent,\n        future: []\n      };\n\n    case 'SET_HISTORY':\n      if (newPresent === present) {\n        return state;\n      }\n      return {\n        past: [...past, newPresent],\n        present: present,\n        future: []\n      };\n\n    case 'CLEAR':\n      const {initialPresent} = action;\n\n      return {\n        ...initialState,\n        present: initialPresent\n      };\n  }\n};\n\n// Hook\nexport const useHistory = (initialPresent: any) => {\n  const [state, dispatch] = useReducer(reducer, {\n    ...initialState,\n    present: initialPresent\n  });\n\n  const canUndo = state.past.length !== 0;\n  const canRedo = state.future.length !== 0;\n\n\n  const undo = useCallback(\n    () => {\n      if (canUndo) {\n        dispatch({type: 'UNDO'});\n      }\n    },\n    [canUndo, dispatch]\n  );\n\n  const redo = useCallback(\n    () => {\n      if (canRedo) {\n        dispatch({type: 'REDO'});\n      }\n    },\n    [canRedo, dispatch]\n  );\n\n  const set = useCallback(newPresent => dispatch({type: 'SET', newPresent}), [\n    dispatch\n  ]);\n\n  const setHistory = useCallback(newPresent => dispatch({type: 'SET_HISTORY', newPresent}), [\n    dispatch\n  ]);\n\n\n  const clear = useCallback(() => dispatch({type: 'CLEAR', initialPresent}), [\n    dispatch\n  ]);\n  // 如果需要，同样可以到处过去和未来的state\n  return {state: state.present, set, setHistory, undo, redo, clear, canUndo, canRedo};\n};\n",["111","112"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeTypes/NodeTypeSelect.tsx",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramNode/portGenerator.js",[],["113","114"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/reportWebVitals.ts",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Toolbar/Toolbar.tsx",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Segment.tsx",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Link.tsx",["115"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Port.tsx",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/index.tsx",["116"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/NodesCanvas.tsx",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramCanvas.tsx",["117"],"import React, { useEffect, useRef, useState } from 'react'\n// import { useWindowScroll, useWindowResize } from 'beautiful-react-hooks';\nimport { isEqual } from 'lodash-es'\nimport DiagramContext from '../Context/DiagramContext'\nimport { IPortRefs, INodeRefs } from \"../../types\"\n\ninterface DiagramCanvasProps {\n  portRefs: IPortRefs;\n  nodeRefs: INodeRefs;\n  scale: number\n}\n\nexport const DiagramCanvas: React.FC<DiagramCanvasProps> = React.memo((props) => {\n  const {children, portRefs, nodeRefs, scale} = props\n  const [bbox, setBoundingBox] = useState<any>(null)\n  const canvasRef = useRef<HTMLDivElement>(null)\n\n  // calculate the given element bounding box and save it into the bbox state\n  const calculateBBox = (el: HTMLDivElement | null) => {\n    if (el) {\n      const nextBBox: any = el.getBoundingClientRect()\n      nextBBox.el = el\n      if (!isEqual(nextBBox, bbox)) {\n        setBoundingBox(nextBBox)\n      }\n    }\n  }\n\n  // when the canvas is ready and placed within the DOM, save its bounding box to be provided down\n  // to children component as a context value for future calculations.\n  useEffect(() => calculateBBox(canvasRef.current), [canvasRef.current])\n  // same on window scroll and resize\n  // useWindowScroll(() => calculateBBox(canvasRef.current));\n  // useWindowResize(() => calculateBBox(canvasRef.current));\n\n  return (\n    <div id='diagram-canvas' className={'bi bi-diagram'} ref={canvasRef} style={{transform: `scale(${scale})`}}>\n      <DiagramContext.Provider value={{canvas: bbox, ports: portRefs, nodes: nodeRefs}}>\n        {children}\n      </DiagramContext.Provider>\n    </div>\n  )\n})\n\nDiagramCanvas.displayName = 'DiagramCanvas'\n\n\n",["118","119"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Context/DiagramContext.ts",[],["120","121"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/hooks/useCanvas.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/hooks/useDrag.js",["122","123","124","125","126"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/hooks/useNodeRefs.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/utils/getNodePortsId.js",[],{"ruleId":"127","severity":1,"message":"128","line":41,"column":46,"nodeType":"129","messageId":"130","endLine":41,"endColumn":51},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"127","severity":1,"message":"135","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":28},{"ruleId":"127","severity":1,"message":"136","line":1,"column":30,"nodeType":"129","messageId":"130","endLine":1,"endColumn":37},{"ruleId":"127","severity":1,"message":"137","line":1,"column":39,"nodeType":"129","messageId":"130","endLine":1,"endColumn":47},{"ruleId":"131","replacedBy":"138"},{"ruleId":"133","replacedBy":"139"},{"ruleId":"131","replacedBy":"140"},{"ruleId":"133","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":107,"column":78,"nodeType":"144","endLine":109,"endColumn":4,"suggestions":"145"},{"ruleId":"131","replacedBy":"146"},{"ruleId":"133","replacedBy":"147"},{"ruleId":"131","replacedBy":"138"},{"ruleId":"133","replacedBy":"139"},{"ruleId":"142","severity":1,"message":"148","line":64,"column":6,"nodeType":"144","endLine":64,"endColumn":60,"suggestions":"149"},{"ruleId":"142","severity":1,"message":"150","line":47,"column":6,"nodeType":"144","endLine":47,"endColumn":8,"suggestions":"151"},{"ruleId":"142","severity":1,"message":"152","line":31,"column":53,"nodeType":"144","endLine":31,"endColumn":72,"suggestions":"153"},{"ruleId":"131","replacedBy":"154"},{"ruleId":"133","replacedBy":"155"},{"ruleId":"131","replacedBy":"156"},{"ruleId":"133","replacedBy":"157"},{"ruleId":"142","severity":1,"message":"158","line":112,"column":5,"nodeType":"144","endLine":112,"endColumn":59,"suggestions":"159"},{"ruleId":"142","severity":1,"message":"160","line":118,"column":18,"nodeType":"129","endLine":118,"endColumn":29},{"ruleId":"142","severity":1,"message":"161","line":145,"column":5,"nodeType":"144","endLine":145,"endColumn":57,"suggestions":"162"},{"ruleId":"142","severity":1,"message":"163","line":166,"column":19,"nodeType":"129","endLine":166,"endColumn":26},{"ruleId":"142","severity":1,"message":"164","line":171,"column":6,"nodeType":"144","endLine":171,"endColumn":25,"suggestions":"165"},"@typescript-eslint/no-unused-vars","'clear' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["166"],"no-negated-in-lhs",["167"],"'ChangeEvent' is defined but never used.","'useMemo' is defined but never used.","'useState' is defined but never used.",["166"],["167"],["166"],["167"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'initialPresent'. Either include it or remove the dependency array.","ArrayExpression",["168"],["166"],["167"],"React Hook useEffect has an unnecessary dependency: 'pathRef.current'. Either exclude it or remove the dependency array. Mutable values like 'pathRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["169"],"React Hook useCallback has missing dependencies: 'nodeRefs' and 'portRefs'. Either include them or remove the dependency array.",["170"],"React Hook useEffect has a missing dependency: 'calculateBBox'. Either include it or remove the dependency array. Mutable values like 'canvasRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["171"],["166"],["167"],["166"],["167"],"React Hook useCallback has a missing dependency: 'targetRef'. Either include it or remove the dependency array. Mutable values like 'targetRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["172"],"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","React Hook useCallback has unnecessary dependencies: 'dragEndHandlerRef.current' and 'targetRef.current'. Either exclude them or remove the dependency array. Mutable values like 'targetRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["173"],"The ref value 'targetRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'targetRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has missing dependencies: 'onDrag', 'onDragEnd', 'onDragStart', and 'targetRef'. Either include them or remove the dependency array. Mutable values like 'targetRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["174"],"no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [initialPresent]",{"range":"189","text":"190"},"Update the dependencies array to be: [link.label, inputPoint, outputPoint]",{"range":"191","text":"192"},"Update the dependencies array to be: [nodeRefs, portRefs]",{"range":"193","text":"194"},"Update the dependencies array to be: [calculateBBox]",{"range":"195","text":"196"},"Update the dependencies array to be: [info, targetRef]",{"range":"197","text":"198"},"Update the dependencies array to be: [info]",{"range":"199","text":"200"},"Update the dependencies array to be: [onDrag, onDragEnd, onDragStart, targetRef]",{"range":"201","text":"202"},[2172,2190],"[initialPresent]",[2288,2342],"[link.label, inputPoint, outputPoint]",[1746,1748],"[nodeRefs, portRefs]",[1154,1173],"[calculateBBox]",[2898,2952],"[info, targetRef]",[3833,3885],"[info]",[4689,4708],"[onDrag, onDragEnd, onDragStart, targetRef]"]