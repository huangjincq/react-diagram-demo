[{"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Diagram.tsx":"1","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramCanvas/DiagramCanvas.tsx":"2","/Users/huangjin/Documents/work/person-project/react-mind-map/src/App.tsx":"3","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramNode/DiagramNode.tsx":"4","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Port/Port.tsx":"5","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeTypes/helper.ts":"6","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeTypes/NodeTypeInput.tsx":"7","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeList/NodeList.tsx":"8","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeList/NodeListItem.tsx":"9","/Users/huangjin/Documents/work/person-project/react-mind-map/src/hooks/useHistory.ts":"10","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/NodesCanvas/NodesCanvas.tsx":"11","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeTypes/NodeTypeSelect.tsx":"12","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Link/LinkDelete.tsx":"13","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramNode/portGenerator.js":"14","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/getPathMidpoint.js":"15","/Users/huangjin/Documents/work/person-project/react-mind-map/src/reportWebVitals.ts":"16","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Link/Link.tsx":"17","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useContextRegistration.js":"18","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useCanvas.js":"19","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useDrag.js":"20","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/LinksCanvas/LinksCanvas.tsx":"21","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Toolbar/Toolbar.tsx":"22","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useNodeUnregistration.js":"23"},{"size":3321,"mtime":1611412843396,"results":"24","hashOfConfig":"25"},{"size":1674,"mtime":1611391163862,"results":"26","hashOfConfig":"25"},{"size":2471,"mtime":1611417247595,"results":"27","hashOfConfig":"25"},{"size":3455,"mtime":1611416819986,"results":"28","hashOfConfig":"25"},{"size":1850,"mtime":1611369401396,"results":"29","hashOfConfig":"25"},{"size":961,"mtime":1611390449008,"results":"30","hashOfConfig":"25"},{"size":627,"mtime":1611416172786,"results":"31","hashOfConfig":"25"},{"size":466,"mtime":1611389215067,"results":"32","hashOfConfig":"25"},{"size":655,"mtime":1611389696771,"results":"33","hashOfConfig":"25"},{"size":2453,"mtime":1611101215414,"results":"34","hashOfConfig":"25"},{"size":2237,"mtime":1611417261603,"results":"35","hashOfConfig":"25"},{"size":797,"mtime":1611416639876,"results":"36","hashOfConfig":"25"},{"size":397,"mtime":1611234952587,"results":"37","hashOfConfig":"25"},{"size":435,"mtime":1611382360062,"results":"38","hashOfConfig":"25"},{"size":304,"mtime":1610497565585,"results":"39","hashOfConfig":"25"},{"size":425,"mtime":1610497175540,"results":"40","hashOfConfig":"25"},{"size":2846,"mtime":1611414776717,"results":"41","hashOfConfig":"25"},{"size":1116,"mtime":1611101742995,"results":"42","hashOfConfig":"25"},{"size":286,"mtime":1610497565593,"results":"43","hashOfConfig":"25"},{"size":4861,"mtime":1611369723616,"results":"44","hashOfConfig":"25"},{"size":2002,"mtime":1611414723196,"results":"45","hashOfConfig":"25"},{"size":1460,"mtime":1611187515879,"results":"46","hashOfConfig":"25"},{"size":598,"mtime":1610497565596,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1la7djy",{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Diagram.tsx",["104"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramCanvas/DiagramCanvas.tsx",["105"],"import React, { useEffect, useRef, useState } from 'react'\n// import { useWindowScroll, useWindowResize } from 'beautiful-react-hooks';\nimport { isEqual } from 'lodash-es'\nimport DiagramContext from '../../Context/DiagramContext'\nimport { IPortRefs, INodeRefs } from \"../../../types\"\n\ninterface DiagramCanvasProps {\n  portRefs: IPortRefs;\n  nodeRefs: INodeRefs;\n  scale: number\n}\n\nexport const DiagramCanvas: React.FC<DiagramCanvasProps> = React.memo((props) => {\n  const {children, portRefs, nodeRefs, scale} = props\n  const [bbox, setBoundingBox] = useState<any>(null)\n  const canvasRef = useRef<HTMLDivElement>(null)\n\n  // calculate the given element bounding box and save it into the bbox state\n  const calculateBBox = (el: HTMLDivElement | null) => {\n    if (el) {\n      const nextBBox: any = el.getBoundingClientRect()\n      nextBBox.el = el\n      if (!isEqual(nextBBox, bbox)) {\n        setBoundingBox(nextBBox)\n      }\n    }\n  }\n\n  // when the canvas is ready and placed within the DOM, save its bounding box to be provided down\n  // to children component as a context value for future calculations.\n  useEffect(() => calculateBBox(canvasRef.current), [canvasRef.current])\n  // same on window scroll and resize\n  // useWindowScroll(() => calculateBBox(canvasRef.current));\n  // useWindowResize(() => calculateBBox(canvasRef.current));\n\n  return (\n    <div id='diagram-canvas' className={'bi bi-diagram'} ref={canvasRef} style={{transform: `scale(${scale})`}}>\n      <DiagramContext.Provider value={{canvas: bbox, ports: portRefs, nodes: nodeRefs}}>\n        {children}\n      </DiagramContext.Provider>\n    </div>\n  )\n})\n\nDiagramCanvas.displayName = 'DiagramCanvas'\n\n\n",["106","107"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/App.tsx",["108"],"import React, { useCallback, useState } from 'react'\nimport { Diagram } from './components/Diagram/Diagram'\nimport { useHistory } from './hooks/useHistory'\nimport { Toolbar } from './components/Toolbar/Toolbar'\nimport { NodeList } from './components/NodeList/NodeList'\nimport { IDiagramType, ICoordinateType } from './types'\nimport { createNode } from './components/NodeTypes/helper'\n\nconst defaultValue: IDiagramType = {\n  nodes: [\n    {\n      id: 'node-1',\n      coordinates: [100, 150],\n      inputs: [],\n      outputs: [\n        {id: 'port-1', disabled: false}\n      ],\n      type: 'node-type-input',\n      data: {\n        inputValue: 'defaultValue'\n      }\n    },\n    {\n      id: 'node-2',\n      type: 'node-type-select',\n      coordinates: [400, 200],\n      inputs: [],\n      outputs: [\n        {id: 'port-5', disabled: false},\n        {id: 'port-6', disabled: false}\n      ],\n      data: {\n        bar: 'foo'\n      }\n    }\n  ],\n  links: [{input: 'port-1', output: 'node-2'}]\n}\n\nfunction App() {\n  const {state, set, setHistory, undo, redo, clear, canUndo, canRedo} = useHistory(defaultValue)\n  const [scale, setScale] = useState<number>(1)\n\n\n  // const [schema, setSchema] = useState(defaultValue)\n  const handleChange = useCallback(\n    (value: any) => {\n      const newValue = {...state, ...value}\n      set(newValue)\n    },\n    [set, state]\n  )\n\n  const handleAddHistory = (nodes: any) => {\n    const newValue = {...state, nodes}\n    setHistory(newValue)\n  }\n\n  const handleDrop = (event: any) => {\n    if (event) {\n      event = window.event\n    }\n    const nodeType = event.dataTransfer.getData('nodeType')\n    const x = event.clientX\n    const y = event.clientY\n\n    const diagramCanvasRect = document.getElementById('diagram-canvas')?.getBoundingClientRect() || {x: 0, y: 0}\n\n    const coordinates: ICoordinateType = [\n      (x - diagramCanvasRect.x) / scale,\n      (y - diagramCanvasRect.y) / scale\n    ]\n    const newNode = createNode(nodeType, coordinates)\n\n\n    handleChange({nodes: [...state.nodes, newNode]})\n  }\n  const handleDrag = (e: any) => {\n    e.preventDefault()\n  }\n\n\n  return (\n    <div className=\"App\" onDrop={handleDrop} onDragEnter={handleDrag} onDragOver={handleDrag}>\n      <Diagram value={state} scale={scale} onChange={handleChange} onAddHistory={handleAddHistory}/>\n      <NodeList/>\n\n      <Toolbar undo={undo} redo={redo} canUndo={canUndo} scale={scale} setScale={setScale} canRedo={canRedo}/>\n    </div>\n  )\n}\n\nexport default App\n","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramNode/DiagramNode.tsx",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Port/Port.tsx",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeTypes/helper.ts",[],["109","110"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeTypes/NodeTypeInput.tsx",["111","112","113"],"import React, { ChangeEvent, useMemo, useState } from 'react'\nimport { Input } from 'antd'\n\nimport './style.scss'\nimport { INodeItemProps } from '../../types'\n\nexport interface NodeTypeInputProps extends INodeItemProps<any> {\n}\n\n\nexport const NodeTypeInput: React.FC<NodeTypeInputProps> = (props) => {\n\n  const {value, onChange} = props\n  const handleInputChange = (e: any) => {\n    onChange({\n      ...value,\n      inputValue: e.target.value\n    })\n  }\n\n  return (\n    <>\n      <Input value={value.inputValue} onChange={handleInputChange} placeholder=\"Basic usage\"/>\n    </>\n  )\n}\n\nNodeTypeInput.displayName = 'NodeTypeInput'\n","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeList/NodeList.tsx",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeList/NodeListItem.tsx",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/hooks/useHistory.ts",["114"],"import {useReducer, useCallback} from 'react';\n\n\n// 初始化useReducer中的state\nconst initialState = {\n  // 当我们每次添加新state时，用来储存更新前状态的数组\n  past: [],\n  // 当前的state值\n  present: null,\n  // 让我们可以用使用重做功能的，future数组\n  future: []\n};\n\n// 根据action处理state的改变\nconst reducer = (state: any, action: any) => {\n  const {past, present, future} = state;\n  const {newPresent} = action;\n\n\n  switch (action.type) {\n    case 'UNDO':\n      const previous = past[past.length - 1];\n      const newPast = past.slice(0, past.length - 1);\n\n      return {\n        past: newPast,\n        present: previous,\n        future: [present, ...future]\n      };\n    case 'REDO':\n      const next = future[0];\n      const newFuture = future.slice(1);\n\n      return {\n        past: [...past, present],\n        present: next,\n        future: newFuture\n      };\n    case 'SET':\n      // if (newPresent === present) {\n      //   return state;\n      // }\n      return {\n        past: [...past],\n        present: newPresent,\n        future: []\n      };\n\n    case 'SET_HISTORY':\n      if (newPresent === present) {\n        return state;\n      }\n      return {\n        past: [...past, newPresent],\n        present: present,\n        future: []\n      };\n\n    case 'CLEAR':\n      const {initialPresent} = action;\n\n      return {\n        ...initialState,\n        present: initialPresent\n      };\n  }\n};\n\n// Hook\nexport const useHistory = (initialPresent: any) => {\n  const [state, dispatch] = useReducer(reducer, {\n    ...initialState,\n    present: initialPresent\n  });\n\n  const canUndo = state.past.length !== 0;\n  const canRedo = state.future.length !== 0;\n\n\n  const undo = useCallback(\n    () => {\n      if (canUndo) {\n        dispatch({type: 'UNDO'});\n      }\n    },\n    [canUndo, dispatch]\n  );\n\n  const redo = useCallback(\n    () => {\n      if (canRedo) {\n        dispatch({type: 'REDO'});\n      }\n    },\n    [canRedo, dispatch]\n  );\n\n  const set = useCallback(newPresent => dispatch({type: 'SET', newPresent}), [\n    dispatch\n  ]);\n\n  const setHistory = useCallback(newPresent => dispatch({type: 'SET_HISTORY', newPresent}), [\n    dispatch\n  ]);\n\n\n  const clear = useCallback(() => dispatch({type: 'CLEAR', initialPresent}), [\n    dispatch\n  ]);\n  // 如果需要，同样可以到处过去和未来的state\n  return {state: state.present, set, setHistory, undo, redo, clear, canUndo, canRedo};\n};\n",["115","116"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/NodesCanvas/NodesCanvas.tsx",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeTypes/NodeTypeSelect.tsx",["117"],"import React from 'react'\nimport { Select } from \"antd\"\n\nimport \"./style.scss\"\nimport { INodeItemProps } from '../../types'\n\nexport interface NodeTypeInputProps extends INodeItemProps<any> {\n\n}\n\n\nexport const NodeTypeSelect: React.FC<NodeTypeInputProps> = ({}) => {\n  function handleChange(value: string) {\n    console.log(`selected ${value}`)\n  }\n\n  return (\n    <>\n      <Select defaultValue=\"lucy\" style={{width: 120}} onChange={handleChange}>\n        <Select.Option value=\"jack\">Jack</Select.Option>\n        <Select.Option value=\"lucy\">Lucy</Select.Option>\n        <Select.Option value=\"disabled\" disabled>\n          Disabled\n        </Select.Option>\n        <Select.Option value=\"Yiminghe\">yiminghe</Select.Option>\n      </Select>\n    </>\n  )\n}\n\nNodeTypeSelect.displayName = 'NodeTypeSelect'\n","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Link/LinkDelete.tsx",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramNode/portGenerator.js",[],["118","119"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/getPathMidpoint.js",[],["120","121"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/reportWebVitals.ts",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Link/Link.tsx",["122"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useContextRegistration.js",["123","124","125","126","127","128"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useCanvas.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useDrag.js",["129","130","131","132","133","134"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/LinksCanvas/LinksCanvas.tsx",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Toolbar/Toolbar.tsx",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useNodeUnregistration.js",["135"],{"ruleId":"136","severity":1,"message":"137","line":47,"column":6,"nodeType":"138","endLine":47,"endColumn":8,"suggestions":"139"},{"ruleId":"136","severity":1,"message":"140","line":31,"column":53,"nodeType":"138","endLine":31,"endColumn":72,"suggestions":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":41,"column":46,"nodeType":"148","messageId":"149","endLine":41,"endColumn":51},{"ruleId":"142","replacedBy":"150"},{"ruleId":"144","replacedBy":"151"},{"ruleId":"146","severity":1,"message":"152","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":28},{"ruleId":"146","severity":1,"message":"153","line":1,"column":30,"nodeType":"148","messageId":"149","endLine":1,"endColumn":37},{"ruleId":"146","severity":1,"message":"154","line":1,"column":39,"nodeType":"148","messageId":"149","endLine":1,"endColumn":47},{"ruleId":"136","severity":1,"message":"155","line":107,"column":78,"nodeType":"138","endLine":109,"endColumn":4,"suggestions":"156"},{"ruleId":"142","replacedBy":"157"},{"ruleId":"144","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":12,"column":62,"nodeType":"161","messageId":"162","endLine":12,"endColumn":64},{"ruleId":"142","replacedBy":"150"},{"ruleId":"144","replacedBy":"151"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"136","severity":1,"message":"163","line":64,"column":6,"nodeType":"138","endLine":64,"endColumn":60,"suggestions":"164"},{"ruleId":"136","severity":1,"message":"165","line":17,"column":6,"nodeType":"138","endLine":17,"endColumn":42,"suggestions":"166"},{"ruleId":"136","severity":1,"message":"167","line":17,"column":7,"nodeType":"168","endLine":17,"endColumn":15},{"ruleId":"136","severity":1,"message":"167","line":17,"column":17,"nodeType":"168","endLine":17,"endColumn":24},{"ruleId":"136","severity":1,"message":"169","line":31,"column":6,"nodeType":"138","endLine":31,"endColumn":58,"suggestions":"170"},{"ruleId":"136","severity":1,"message":"171","line":31,"column":36,"nodeType":"168","endLine":31,"endColumn":44},{"ruleId":"136","severity":1,"message":"171","line":31,"column":46,"nodeType":"168","endLine":31,"endColumn":53},{"ruleId":"136","severity":1,"message":"172","line":37,"column":5,"nodeType":"138","endLine":37,"endColumn":18,"suggestions":"173"},{"ruleId":"136","severity":1,"message":"174","line":111,"column":5,"nodeType":"138","endLine":111,"endColumn":59,"suggestions":"175"},{"ruleId":"136","severity":1,"message":"176","line":117,"column":18,"nodeType":"148","endLine":117,"endColumn":29},{"ruleId":"136","severity":1,"message":"177","line":144,"column":5,"nodeType":"138","endLine":144,"endColumn":57,"suggestions":"178"},{"ruleId":"136","severity":1,"message":"179","line":165,"column":19,"nodeType":"148","endLine":165,"endColumn":26},{"ruleId":"136","severity":1,"message":"180","line":170,"column":6,"nodeType":"138","endLine":170,"endColumn":25,"suggestions":"181"},{"ruleId":"136","severity":1,"message":"182","line":15,"column":6,"nodeType":"138","endLine":15,"endColumn":8,"suggestions":"183"},"react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'nodeRefs' and 'portRefs'. Either include them or remove the dependency array.","ArrayExpression",["184"],"React Hook useEffect has a missing dependency: 'calculateBBox'. Either include it or remove the dependency array. Mutable values like 'canvasRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["185"],"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"@typescript-eslint/no-unused-vars","'clear' is assigned a value but never used.","Identifier","unusedVar",["186"],["187"],"'ChangeEvent' is defined but never used.","'useMemo' is defined but never used.","'useState' is defined but never used.","React Hook useCallback has a missing dependency: 'initialPresent'. Either include it or remove the dependency array.",["188"],["186"],["187"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has an unnecessary dependency: 'pathRef.current'. Either exclude it or remove the dependency array. Mutable values like 'pathRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["189"],"React Hook useCallback has missing dependencies: 'canvas', 'onPortRegister', and 'ports'. Either include them or remove the dependency array. If 'onPortRegister' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["190"],"React Hook useCallback has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","UnaryExpression","React Hook useEffect has missing dependencies: 'canvas', 'nodes', and 'ref'. Either include them or remove the dependency array. Mutable values like 'ref.current' aren't valid dependencies because mutating them doesn't re-render the component.",["191"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","React Hook useCallback has a missing dependency: 'ref'. Either include it or remove the dependency array. Mutable values like 'ref.current' aren't valid dependencies because mutating them doesn't re-render the component.",["192"],"React Hook useCallback has a missing dependency: 'targetRef'. Either include it or remove the dependency array. Mutable values like 'targetRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["193"],"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","React Hook useCallback has unnecessary dependencies: 'dragEndHandlerRef.current' and 'targetRef.current'. Either exclude them or remove the dependency array. Mutable values like 'targetRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["194"],"The ref value 'targetRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'targetRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has missing dependencies: 'onDrag', 'onDragEnd', 'onDragStart', and 'targetRef'. Either include them or remove the dependency array. Mutable values like 'targetRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["195"],"React Hook useEffect has missing dependencies: 'id', 'inputs', 'onNodeRemove', and 'outputs'. Either include them or remove the dependency array. If 'onNodeRemove' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["196"],{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},"Update the dependencies array to be: [nodeRefs, portRefs]",{"range":"219","text":"220"},"Update the dependencies array to be: [calculateBBox]",{"range":"221","text":"222"},"Update the dependencies array to be: [initialPresent]",{"range":"223","text":"224"},"Update the dependencies array to be: [link.label, inputPoint, outputPoint]",{"range":"225","text":"226"},"Update the dependencies array to be: [canvas, inputs, onPortRegister, outputs, ports]",{"range":"227","text":"228"},"Update the dependencies array to be: [onNodeRegister, id, ref, canvas, nodes]",{"range":"229","text":"230"},"Update the dependencies array to be: [ref]",{"range":"231","text":"232"},"Update the dependencies array to be: [info, targetRef]",{"range":"233","text":"234"},"Update the dependencies array to be: [info]",{"range":"235","text":"236"},"Update the dependencies array to be: [onDrag, onDragEnd, onDragStart, targetRef]",{"range":"237","text":"238"},"Update the dependencies array to be: [id, inputs, onNodeRemove, outputs]",{"range":"239","text":"240"},[1818,1820],"[nodeRefs, portRefs]",[1160,1179],"[calculateBBox]",[2172,2190],"[initialPresent]",[2361,2415],"[link.label, inputPoint, outputPoint]",[607,643],"[canvas, inputs, onPortRegister, outputs, ports]",[1058,1110],"[onNodeRegister, id, ref, canvas, nodes]",[838,851],"[ref]",[2830,2884],"[info, targetRef]",[3765,3817],"[info]",[4621,4640],"[onDrag, onDragEnd, onDragStart, targetRef]",[551,553],"[id, inputs, onNodeRemove, outputs]"]