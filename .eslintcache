[{"/Users/huangjin/Documents/work/person-project/react-mind-map/src/App.tsx":"1","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramNode/DiagramNode.tsx":"2","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeTypes/helper.ts":"3","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeTypes/NodeTypeInput.tsx":"4","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeList/NodeList.tsx":"5","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeList/NodeListItem.tsx":"6","/Users/huangjin/Documents/work/person-project/react-mind-map/src/hooks/useHistory.ts":"7","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeTypes/NodeTypeSelect.tsx":"8","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramNode/portGenerator.js":"9","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/getPathMidpoint.js":"10","/Users/huangjin/Documents/work/person-project/react-mind-map/src/reportWebVitals.ts":"11","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useContextRegistration.js":"12","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useCanvas.js":"13","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useDrag.js":"14","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Toolbar/Toolbar.tsx":"15","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useNodeUnregistration.js":"16","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Segment.tsx":"17","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Link.tsx":"18","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useNodeRefs.js":"19","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Port.tsx":"20","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/usePortRefs.js":"21","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/index.tsx":"22","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/NodesCanvas.tsx":"23","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramCanvas.tsx":"24","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Context/DiagramContext.ts":"25","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/getNodePortsId.js":"26"},{"size":2461,"mtime":1611417576662,"results":"27","hashOfConfig":"28"},{"size":3455,"mtime":1611416819986,"results":"29","hashOfConfig":"28"},{"size":961,"mtime":1611390449008,"results":"30","hashOfConfig":"28"},{"size":627,"mtime":1611416172786,"results":"31","hashOfConfig":"28"},{"size":466,"mtime":1611389215067,"results":"32","hashOfConfig":"28"},{"size":655,"mtime":1611389696771,"results":"33","hashOfConfig":"28"},{"size":2453,"mtime":1611101215414,"results":"34","hashOfConfig":"28"},{"size":797,"mtime":1611416639876,"results":"35","hashOfConfig":"28"},{"size":430,"mtime":1611417435554,"results":"36","hashOfConfig":"28"},{"size":304,"mtime":1610497565585,"results":"37","hashOfConfig":"28"},{"size":425,"mtime":1610497175540,"results":"38","hashOfConfig":"28"},{"size":1116,"mtime":1611101742995,"results":"39","hashOfConfig":"28"},{"size":286,"mtime":1610497565593,"results":"40","hashOfConfig":"28"},{"size":4861,"mtime":1611369723616,"results":"41","hashOfConfig":"28"},{"size":1460,"mtime":1611187515879,"results":"42","hashOfConfig":"28"},{"size":598,"mtime":1610497565596,"results":"43","hashOfConfig":"28"},{"size":621,"mtime":1611417294077,"results":"44","hashOfConfig":"28"},{"size":2820,"mtime":1611417839507,"results":"45","hashOfConfig":"28"},{"size":284,"mtime":1610497565596,"results":"46","hashOfConfig":"28"},{"size":1841,"mtime":1611417435545,"results":"47","hashOfConfig":"28"},{"size":284,"mtime":1610497565597,"results":"48","hashOfConfig":"28"},{"size":3251,"mtime":1611417570733,"results":"49","hashOfConfig":"28"},{"size":2233,"mtime":1611417435557,"results":"50","hashOfConfig":"28"},{"size":1668,"mtime":1611417435561,"results":"51","hashOfConfig":"28"},{"size":312,"mtime":1611413644564,"results":"52","hashOfConfig":"28"},{"size":367,"mtime":1610497565581,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1la7djy",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/huangjin/Documents/work/person-project/react-mind-map/src/App.tsx",["118","119","120"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramNode/DiagramNode.tsx",[],["121","122"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeTypes/helper.ts",[],["123","124"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeTypes/NodeTypeInput.tsx",["125","126","127"],"import React, { ChangeEvent, useMemo, useState } from 'react'\nimport { Input } from 'antd'\n\nimport './style.scss'\nimport { INodeItemProps } from '../../types'\n\nexport interface NodeTypeInputProps extends INodeItemProps<any> {\n}\n\n\nexport const NodeTypeInput: React.FC<NodeTypeInputProps> = (props) => {\n\n  const {value, onChange} = props\n  const handleInputChange = (e: any) => {\n    onChange({\n      ...value,\n      inputValue: e.target.value\n    })\n  }\n\n  return (\n    <>\n      <Input value={value.inputValue} onChange={handleInputChange} placeholder=\"Basic usage\"/>\n    </>\n  )\n}\n\nNodeTypeInput.displayName = 'NodeTypeInput'\n",["128","129"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeList/NodeList.tsx",[],["130","131"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeList/NodeListItem.tsx",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/hooks/useHistory.ts",["132"],"import {useReducer, useCallback} from 'react';\n\n\n// 初始化useReducer中的state\nconst initialState = {\n  // 当我们每次添加新state时，用来储存更新前状态的数组\n  past: [],\n  // 当前的state值\n  present: null,\n  // 让我们可以用使用重做功能的，future数组\n  future: []\n};\n\n// 根据action处理state的改变\nconst reducer = (state: any, action: any) => {\n  const {past, present, future} = state;\n  const {newPresent} = action;\n\n\n  switch (action.type) {\n    case 'UNDO':\n      const previous = past[past.length - 1];\n      const newPast = past.slice(0, past.length - 1);\n\n      return {\n        past: newPast,\n        present: previous,\n        future: [present, ...future]\n      };\n    case 'REDO':\n      const next = future[0];\n      const newFuture = future.slice(1);\n\n      return {\n        past: [...past, present],\n        present: next,\n        future: newFuture\n      };\n    case 'SET':\n      // if (newPresent === present) {\n      //   return state;\n      // }\n      return {\n        past: [...past],\n        present: newPresent,\n        future: []\n      };\n\n    case 'SET_HISTORY':\n      if (newPresent === present) {\n        return state;\n      }\n      return {\n        past: [...past, newPresent],\n        present: present,\n        future: []\n      };\n\n    case 'CLEAR':\n      const {initialPresent} = action;\n\n      return {\n        ...initialState,\n        present: initialPresent\n      };\n  }\n};\n\n// Hook\nexport const useHistory = (initialPresent: any) => {\n  const [state, dispatch] = useReducer(reducer, {\n    ...initialState,\n    present: initialPresent\n  });\n\n  const canUndo = state.past.length !== 0;\n  const canRedo = state.future.length !== 0;\n\n\n  const undo = useCallback(\n    () => {\n      if (canUndo) {\n        dispatch({type: 'UNDO'});\n      }\n    },\n    [canUndo, dispatch]\n  );\n\n  const redo = useCallback(\n    () => {\n      if (canRedo) {\n        dispatch({type: 'REDO'});\n      }\n    },\n    [canRedo, dispatch]\n  );\n\n  const set = useCallback(newPresent => dispatch({type: 'SET', newPresent}), [\n    dispatch\n  ]);\n\n  const setHistory = useCallback(newPresent => dispatch({type: 'SET_HISTORY', newPresent}), [\n    dispatch\n  ]);\n\n\n  const clear = useCallback(() => dispatch({type: 'CLEAR', initialPresent}), [\n    dispatch\n  ]);\n  // 如果需要，同样可以到处过去和未来的state\n  return {state: state.present, set, setHistory, undo, redo, clear, canUndo, canRedo};\n};\n",["133","134"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/NodeTypes/NodeTypeSelect.tsx",["135"],"import React from 'react'\nimport { Select } from \"antd\"\n\nimport \"./style.scss\"\nimport { INodeItemProps } from '../../types'\n\nexport interface NodeTypeInputProps extends INodeItemProps<any> {\n\n}\n\n\nexport const NodeTypeSelect: React.FC<NodeTypeInputProps> = ({}) => {\n  function handleChange(value: string) {\n    console.log(`selected ${value}`)\n  }\n\n  return (\n    <>\n      <Select defaultValue=\"lucy\" style={{width: 120}} onChange={handleChange}>\n        <Select.Option value=\"jack\">Jack</Select.Option>\n        <Select.Option value=\"lucy\">Lucy</Select.Option>\n        <Select.Option value=\"disabled\" disabled>\n          Disabled\n        </Select.Option>\n        <Select.Option value=\"Yiminghe\">yiminghe</Select.Option>\n      </Select>\n    </>\n  )\n}\n\nNodeTypeSelect.displayName = 'NodeTypeSelect'\n","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramNode/portGenerator.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/getPathMidpoint.js",[],["136","137"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/reportWebVitals.ts",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useContextRegistration.js",["138","139","140","141","142","143"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useCanvas.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useDrag.js",["144","145","146","147","148","149"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Toolbar/Toolbar.tsx",[],["150","151"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useNodeUnregistration.js",["152"],"import { useEffect } from 'react';\nimport getNodePortsId from '../functions/getNodePortsId';\n\n/**\n * Takes the inputs and outputs node ports and onNodeRemove callback to be performed when the node is unmounted\n */\nconst useNodeUnregistration = (onNodeRemove, inputs, outputs, id) => {\n  useEffect(() => () => {\n    if (onNodeRemove) {\n      const node = { inputs, outputs };\n      const inputsPort = getNodePortsId(node, 'inputs');\n      const outputsPort = getNodePortsId(node, 'outputs');\n      onNodeRemove(id, inputsPort, outputsPort);\n    }\n  }, []);\n};\n\nexport default useNodeUnregistration;\n",["153","154"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Segment.tsx",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Link.tsx",["155"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useNodeRefs.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Port.tsx",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/usePortRefs.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/index.tsx",["156"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/NodesCanvas.tsx",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramCanvas.tsx",["157"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Context/DiagramContext.ts",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/getNodePortsId.js",[],{"ruleId":"158","severity":1,"message":"159","line":2,"column":10,"nodeType":"160","messageId":"161","endLine":2,"endColumn":17},{"ruleId":"158","severity":1,"message":"162","line":41,"column":46,"nodeType":"160","messageId":"161","endLine":41,"endColumn":51},{"ruleId":"163","severity":2,"message":"164","line":85,"column":8,"nodeType":"165","endLine":85,"endColumn":13},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"166","replacedBy":"170"},{"ruleId":"168","replacedBy":"171"},{"ruleId":"158","severity":1,"message":"172","line":1,"column":17,"nodeType":"160","messageId":"161","endLine":1,"endColumn":28},{"ruleId":"158","severity":1,"message":"173","line":1,"column":30,"nodeType":"160","messageId":"161","endLine":1,"endColumn":37},{"ruleId":"158","severity":1,"message":"174","line":1,"column":39,"nodeType":"160","messageId":"161","endLine":1,"endColumn":47},{"ruleId":"166","replacedBy":"175"},{"ruleId":"168","replacedBy":"176"},{"ruleId":"166","replacedBy":"177"},{"ruleId":"168","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":107,"column":78,"nodeType":"181","endLine":109,"endColumn":4,"suggestions":"182"},{"ruleId":"166","replacedBy":"183"},{"ruleId":"168","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":12,"column":62,"nodeType":"187","messageId":"188","endLine":12,"endColumn":64},{"ruleId":"166","replacedBy":"175"},{"ruleId":"168","replacedBy":"176"},{"ruleId":"179","severity":1,"message":"189","line":17,"column":6,"nodeType":"181","endLine":17,"endColumn":42,"suggestions":"190"},{"ruleId":"179","severity":1,"message":"191","line":17,"column":7,"nodeType":"192","endLine":17,"endColumn":15},{"ruleId":"179","severity":1,"message":"191","line":17,"column":17,"nodeType":"192","endLine":17,"endColumn":24},{"ruleId":"179","severity":1,"message":"193","line":31,"column":6,"nodeType":"181","endLine":31,"endColumn":58,"suggestions":"194"},{"ruleId":"179","severity":1,"message":"195","line":31,"column":36,"nodeType":"192","endLine":31,"endColumn":44},{"ruleId":"179","severity":1,"message":"195","line":31,"column":46,"nodeType":"192","endLine":31,"endColumn":53},{"ruleId":"179","severity":1,"message":"196","line":37,"column":5,"nodeType":"181","endLine":37,"endColumn":18,"suggestions":"197"},{"ruleId":"179","severity":1,"message":"198","line":111,"column":5,"nodeType":"181","endLine":111,"endColumn":59,"suggestions":"199"},{"ruleId":"179","severity":1,"message":"200","line":117,"column":18,"nodeType":"160","endLine":117,"endColumn":29},{"ruleId":"179","severity":1,"message":"201","line":144,"column":5,"nodeType":"181","endLine":144,"endColumn":57,"suggestions":"202"},{"ruleId":"179","severity":1,"message":"203","line":165,"column":19,"nodeType":"160","endLine":165,"endColumn":26},{"ruleId":"179","severity":1,"message":"204","line":170,"column":6,"nodeType":"181","endLine":170,"endColumn":25,"suggestions":"205"},{"ruleId":"166","replacedBy":"206"},{"ruleId":"168","replacedBy":"207"},{"ruleId":"179","severity":1,"message":"208","line":15,"column":6,"nodeType":"181","endLine":15,"endColumn":8,"suggestions":"209"},{"ruleId":"166","replacedBy":"170"},{"ruleId":"168","replacedBy":"171"},{"ruleId":"179","severity":1,"message":"210","line":64,"column":6,"nodeType":"181","endLine":64,"endColumn":60,"suggestions":"211"},{"ruleId":"179","severity":1,"message":"212","line":47,"column":6,"nodeType":"181","endLine":47,"endColumn":8,"suggestions":"213"},{"ruleId":"179","severity":1,"message":"214","line":31,"column":53,"nodeType":"181","endLine":31,"endColumn":72,"suggestions":"215"},"@typescript-eslint/no-unused-vars","'Diagram' is defined but never used.","Identifier","unusedVar","'clear' is assigned a value but never used.","react/jsx-no-undef","'Index' is not defined.","JSXIdentifier","no-native-reassign",["216"],"no-negated-in-lhs",["217"],["216"],["217"],"'ChangeEvent' is defined but never used.","'useMemo' is defined but never used.","'useState' is defined but never used.",["216"],["217"],["216"],["217"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'initialPresent'. Either include it or remove the dependency array.","ArrayExpression",["218"],["216"],["217"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useCallback has missing dependencies: 'canvas', 'onPortRegister', and 'ports'. Either include them or remove the dependency array. If 'onPortRegister' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["219"],"React Hook useCallback has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","UnaryExpression","React Hook useEffect has missing dependencies: 'canvas', 'nodes', and 'ref'. Either include them or remove the dependency array. Mutable values like 'ref.current' aren't valid dependencies because mutating them doesn't re-render the component.",["220"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","React Hook useCallback has a missing dependency: 'ref'. Either include it or remove the dependency array. Mutable values like 'ref.current' aren't valid dependencies because mutating them doesn't re-render the component.",["221"],"React Hook useCallback has a missing dependency: 'targetRef'. Either include it or remove the dependency array. Mutable values like 'targetRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["222"],"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","React Hook useCallback has unnecessary dependencies: 'dragEndHandlerRef.current' and 'targetRef.current'. Either exclude them or remove the dependency array. Mutable values like 'targetRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["223"],"The ref value 'targetRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'targetRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has missing dependencies: 'onDrag', 'onDragEnd', 'onDragStart', and 'targetRef'. Either include them or remove the dependency array. Mutable values like 'targetRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["224"],["216"],["217"],"React Hook useEffect has missing dependencies: 'id', 'inputs', 'onNodeRemove', and 'outputs'. Either include them or remove the dependency array. If 'onNodeRemove' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["225"],"React Hook useEffect has an unnecessary dependency: 'pathRef.current'. Either exclude it or remove the dependency array. Mutable values like 'pathRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["226"],"React Hook useCallback has missing dependencies: 'nodeRefs' and 'portRefs'. Either include them or remove the dependency array.",["227"],"React Hook useEffect has a missing dependency: 'calculateBBox'. Either include it or remove the dependency array. Mutable values like 'canvasRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["228"],"no-global-assign","no-unsafe-negation",{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},"Update the dependencies array to be: [initialPresent]",{"range":"251","text":"252"},"Update the dependencies array to be: [canvas, inputs, onPortRegister, outputs, ports]",{"range":"253","text":"254"},"Update the dependencies array to be: [onNodeRegister, id, ref, canvas, nodes]",{"range":"255","text":"256"},"Update the dependencies array to be: [ref]",{"range":"257","text":"258"},"Update the dependencies array to be: [info, targetRef]",{"range":"259","text":"260"},"Update the dependencies array to be: [info]",{"range":"261","text":"262"},"Update the dependencies array to be: [onDrag, onDragEnd, onDragStart, targetRef]",{"range":"263","text":"264"},"Update the dependencies array to be: [id, inputs, onNodeRemove, outputs]",{"range":"265","text":"266"},"Update the dependencies array to be: [link.label, inputPoint, outputPoint]",{"range":"267","text":"268"},"Update the dependencies array to be: [nodeRefs, portRefs]",{"range":"269","text":"270"},"Update the dependencies array to be: [calculateBBox]",{"range":"271","text":"272"},[2172,2190],"[initialPresent]",[607,643],"[canvas, inputs, onPortRegister, outputs, ports]",[1058,1110],"[onNodeRegister, id, ref, canvas, nodes]",[838,851],"[ref]",[2830,2884],"[info, targetRef]",[3765,3817],"[info]",[4621,4640],"[onDrag, onDragEnd, onDragStart, targetRef]",[551,553],"[id, inputs, onNodeRemove, outputs]",[2335,2389],"[link.label, inputPoint, outputPoint]",[1748,1750],"[nodeRefs, portRefs]",[1154,1173],"[calculateBBox]"]