[{"/Users/huangjin/Documents/work/person-project/react-mind-map/src/App.tsx":"1","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Diagram.js":"2","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/Types.js":"3","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/NodesCanvas/NodesCanvas.js":"4","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/NodesCanvas/updateNodeCoordinates.js":"5","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Segment/Segment.js":"6","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramNode/DiagramNode.js":"7","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramNode/getDiagramNodeStyle.js":"8","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Link/getEntityCoordinates.js":"9","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useNodeUnregistration.js":"10","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/getPathMidpoint.js":"11","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/makeSvgPath.js":"12","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/getRelativePoint.js":"13","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Port/Port.js":"14","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useContextRegistration.js":"15","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramCanvas/DiagramCanvas.js":"16","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/usePortRefs.js":"17","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramNode/portGenerator.js":"18","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Link/LinkLabel.js":"19","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useDrag.js":"20","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Context/DiagramContext.js":"21","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useNodeRefs.js":"22","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/LinksCanvas/removeLinkFromArray.js":"23","/Users/huangjin/Documents/work/person-project/react-mind-map/src/hooks/useHistory.ts":"24","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/getNodePortsId.js":"25","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Link/Link.js":"26","/Users/huangjin/Documents/work/person-project/react-mind-map/src/index.tsx":"27","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/LinksCanvas/findInvolvedEntity.js":"28","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useCanvas.js":"29","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/LinksCanvas/LinksCanvas.js":"30","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Toolbar/Toolbar.tsx":"31"},{"size":1556,"mtime":1610638960984,"results":"32","hashOfConfig":"33"},{"size":3878,"mtime":1611069769467,"results":"34","hashOfConfig":"33"},{"size":1109,"mtime":1610497565577,"results":"35","hashOfConfig":"33"},{"size":1790,"mtime":1611069625018,"results":"36","hashOfConfig":"33"},{"size":605,"mtime":1610547014931,"results":"37","hashOfConfig":"33"},{"size":831,"mtime":1610497565566,"results":"38","hashOfConfig":"33"},{"size":5493,"mtime":1611070219501,"results":"39","hashOfConfig":"33"},{"size":193,"mtime":1610497565544,"results":"40","hashOfConfig":"33"},{"size":913,"mtime":1611069439874,"results":"41","hashOfConfig":"33"},{"size":598,"mtime":1610497565596,"results":"42","hashOfConfig":"33"},{"size":304,"mtime":1610497565585,"results":"43","hashOfConfig":"33"},{"size":1847,"mtime":1610549278027,"results":"44","hashOfConfig":"33"},{"size":130,"mtime":1610497565588,"results":"45","hashOfConfig":"33"},{"size":2210,"mtime":1610639991071,"results":"46","hashOfConfig":"33"},{"size":1116,"mtime":1610497565594,"results":"47","hashOfConfig":"33"},{"size":2007,"mtime":1610639313881,"results":"48","hashOfConfig":"33"},{"size":284,"mtime":1610497565597,"results":"49","hashOfConfig":"33"},{"size":410,"mtime":1610639991068,"results":"50","hashOfConfig":"33"},{"size":445,"mtime":1610497565548,"results":"51","hashOfConfig":"33"},{"size":4797,"mtime":1610546949873,"results":"52","hashOfConfig":"33"},{"size":108,"mtime":1610497565526,"results":"53","hashOfConfig":"33"},{"size":284,"mtime":1610497565596,"results":"54","hashOfConfig":"33"},{"size":163,"mtime":1610546949870,"results":"55","hashOfConfig":"33"},{"size":2471,"mtime":1611070020951,"results":"56","hashOfConfig":"33"},{"size":367,"mtime":1610497565581,"results":"57","hashOfConfig":"33"},{"size":3121,"mtime":1611068358601,"results":"58","hashOfConfig":"33"},{"size":500,"mtime":1610497175539,"results":"59","hashOfConfig":"33"},{"size":686,"mtime":1611069529724,"results":"60","hashOfConfig":"33"},{"size":286,"mtime":1610497565593,"results":"61","hashOfConfig":"33"},{"size":1657,"mtime":1610497565551,"results":"62","hashOfConfig":"33"},{"size":1480,"mtime":1610638388278,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1la7djy",{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"83"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/huangjin/Documents/work/person-project/react-mind-map/src/App.tsx",["137"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Diagram.js",["138","139"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/Types.js",[],["140","141"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/NodesCanvas/NodesCanvas.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/NodesCanvas/updateNodeCoordinates.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Segment/Segment.js",["142"],"import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { PortAlignment } from '../../shared/Types';\nimport makeSvgPath from '../../shared/functions/makeSvgPath';\n\n/**\n * Segment\n */\nconst Segment = (props) => {\n  const { from, to, alignment } = props;\n  const pathOptions = { type: 'bezier', inputAlignment: alignment };\n  const path = useMemo(() => makeSvgPath(from, to, pathOptions), [from, to, alignment]);\n\n  return (\n    <g className=\"bi-diagram-segment\">\n      <path d={path} />\n      <circle r=\"6.5\" cx={to[0]} cy={to[1]} />\n    </g>\n  );\n};\n\nSegment.propTypes = {\n  from: PropTypes.arrayOf(PropTypes.number).isRequired,\n  to: PropTypes.arrayOf(PropTypes.number).isRequired,\n  alignment: PortAlignment,\n};\n\nSegment.defaultProps = {\n  alignment: undefined,\n};\n\nexport default React.memo(Segment);\n",["143","144"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramNode/DiagramNode.js",["145"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramNode/getDiagramNodeStyle.js",[],["146","147"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Link/getEntityCoordinates.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useNodeUnregistration.js",["148"],"import { useEffect } from 'react';\nimport getNodePortsId from '../functions/getNodePortsId';\n\n/**\n * Takes the inputs and outputs node ports and onNodeRemove callback to be performed when the node is unmounted\n */\nconst useNodeUnregistration = (onNodeRemove, inputs, outputs, id) => {\n  useEffect(() => () => {\n    if (onNodeRemove) {\n      const node = { inputs, outputs };\n      const inputsPort = getNodePortsId(node, 'inputs');\n      const outputsPort = getNodePortsId(node, 'outputs');\n      onNodeRemove(id, inputsPort, outputsPort);\n    }\n  }, []);\n};\n\nexport default useNodeUnregistration;\n","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/getPathMidpoint.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/makeSvgPath.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/getRelativePoint.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Port/Port.js",["149"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useContextRegistration.js",["150","151","152","153","154","155"],"import { useCallback, useEffect, useContext } from 'react';\nimport DiagramContext from '../../Context/DiagramContext';\n\n/**\n * Returns a callback that will perform the onPortRegister function when the context is ready (canvas exists)\n * and there's at least one input or one output\n */\nexport const usePortRegistration = (inputs, outputs, onPortRegister) => {\n  const { canvas, ports } = useContext(DiagramContext);\n\n  return useCallback((portId, portElement) => {\n    if (canvas && (inputs || outputs)) {\n      if (ports && !ports[portId]) {\n        onPortRegister(portId, portElement);\n      }\n    }\n  }, [!!canvas, !!ports, inputs, outputs]);\n};\n\n/**\n * Takes a dom reference and an onNodeRegister callback and perform the callback when the node is mounted\n * and the canvas is ready\n */\nexport const useNodeRegistration = (ref, onNodeRegister, id) => {\n  const { canvas, nodes } = useContext(DiagramContext);\n\n  useEffect(() => {\n    if (onNodeRegister && ref.current && canvas && nodes && !nodes[id]) {\n      onNodeRegister(id, ref.current);\n    }\n  }, [ref.current, onNodeRegister, !!canvas, !!nodes, id]);\n};\n","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramCanvas/DiagramCanvas.js",["156"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/usePortRefs.js",[],["157","158"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/DiagramNode/portGenerator.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Link/LinkLabel.js",[],["159","160"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useDrag.js",["161","162","163","164","165","166"],"import { throttle } from 'lodash-es'\nimport { useRef, useCallback, useEffect } from 'react'\n\nconst defaultOptions = {\n  /**\n   * A custom ref to be used in place of a new one\n   * @default undefined\n   */\n  ref: undefined,\n  /**\n   * Throttle the onDrag handler by the given ms\n   * @default 0ms\n   */\n  throttleBy: 0,\n}\n\n/**\n * Returns the click coordinates of a MouseEvent\n * @param event\n * @returns {*[]}\n */\nconst getEventCoordinates = (event) => [event.clientX, event.clientY]\n\n/**\n * Create a persistent callback reference that will live trough a component lifecycle\n * @param ref\n * @returns {Function}\n */\nconst CreateCallbackRef = (ref) =>\n  useCallback(\n    (callback) => {\n      if (!ref.current || callback !== ref.current) {\n        // eslint-disable-next-line no-param-reassign\n        ref.current = callback\n      }\n    },\n    [ref.current]\n  )\n\n/**\n * A custom hook exposing handlers and ref for developing draggable React elements.\n *\n * ## Basic Usage:\n *\n * ```\n * const DraggableItem = () => {\n *    const { ref, isDragging, onDragStart, onDrag, onDragEnd } = useDrag();\n *\n *    onDragStart(dragStartHandler);\n *\n *    onDrag(dragHandler);\n *\n *    onDragEnd(dragEndHandler);\n *\n *    return (\n *      <div ref={ref}>\n *        Drag me!\n *      </div>\n *    );\n * }\n * ```\n *\n * ## Options:\n *\n * ```\n * const DraggingItem = () => {\n *    const ref = useRef();\n *    const options = { ref, throttleBy: 60 };\n *    const { isDragging, onDragStart, onDrag, onDragEnd } = useDrag(options);\n *\n *    onDragStart(dragStartHandler);\n *\n *    onDrag(dragHandler);\n *\n *    onDragEnd(dragEndHandler);\n *\n *    return (\n *      <div ref={ref}>\n *        Drag me!\n *      </div>\n *    );\n * }\n * ```\n */\nconst useDrag = (options = defaultOptions) => {\n  const targetRef = options.ref // the target draggable element\n  const dragStartHandlerRef = useRef() // a ref to user's onDragStart handler\n  const dragHandlerRef = useRef() // a ref to user's onDrag handler\n  const dragEndHandlerRef = useRef() // a ref to user's onDragEnd handler\n  // the dragging state is created from a useRef rather than a useState to avoid rendering during the dragging process\n  const { current: info } = useRef({ isDragging: false, start: null, end: null, offset: null })\n\n  /**\n   * When the dragging starts, updates the state then perform the user's onDragStart handler if exists\n   */\n  const onDragStart = useCallback(\n    (event) => {\n      if (!info.isDragging && targetRef.current.contains(event.target)) {\n        info.isDragging = true\n        info.end = null\n        info.offset = null\n        info.start = getEventCoordinates(event)\n\n        if (dragStartHandlerRef.current) {\n          dragStartHandlerRef.current(event, { ...info })\n        }\n      }\n    },\n    [targetRef.current, info, dragStartHandlerRef.current]\n  )\n\n  /**\n   * Whilst dragging the element, updates the state then perform the user's onDrag handler if exists\n   */\n  const onDrag = useCallback(\n    throttle((event) => {\n      if (info.isDragging) {\n        info.offset = [info.start[0] - event.clientX, info.start[1] - event.clientY]\n\n        if (dragHandlerRef.current) {\n          dragHandlerRef.current(event, { ...info })\n        }\n      }\n    }, options.throttleBy),\n    [targetRef.current, info, dragHandlerRef.current]\n  )\n\n  /**\n   * When the dragging ends, updates the state then perform the user's onDragEnd handler if exists\n   */\n  const onDragEnd = useCallback(\n    (event) => {\n      if (info.isDragging) {\n        info.isDragging = false\n        info.end = getEventCoordinates(event)\n\n        if (dragEndHandlerRef.current) {\n          dragEndHandlerRef.current(event, { ...info })\n        }\n      }\n    },\n    [targetRef.current, info, dragEndHandlerRef.current]\n  )\n\n  /**\n   * When the layout renders the target item, assign the dragging events\n   */\n  useEffect(() => {\n    /* eslint-disable no-underscore-dangle */\n    const _onDragStart = (e) => onDragStart(e)\n    const _onDrag = (e) => onDrag(e)\n    const _onDragEnd = (e) => onDragEnd(e)\n    /* eslint-enable no-underscore-dangle */\n\n    if (targetRef.current) {\n      targetRef.current.addEventListener('mousedown', _onDragStart)\n      document.addEventListener('mousemove', _onDrag)\n      document.addEventListener('mouseup', _onDragEnd)\n    }\n\n    return () => {\n      if (targetRef.current) {\n        targetRef.current.removeEventListener('mousedown', _onDragStart)\n        document.removeEventListener('mousemove', _onDrag)\n        document.removeEventListener('mouseup', _onDragEnd)\n      }\n    }\n  }, [targetRef.current])\n\n  return {\n    ref: targetRef,\n    onDragStart: CreateCallbackRef(dragStartHandlerRef),\n    onDrag: CreateCallbackRef(dragHandlerRef),\n    onDragEnd: CreateCallbackRef(dragEndHandlerRef),\n  }\n}\n\nexport default useDrag\n","/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Context/DiagramContext.js",[],["167","168"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useNodeRefs.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/LinksCanvas/removeLinkFromArray.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/hooks/useHistory.ts",["169"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/functions/getNodePortsId.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/Link/Link.js",["170","171","172"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/index.tsx",[],["173","174"],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/LinksCanvas/findInvolvedEntity.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/shared/internal_hooks/useCanvas.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Diagram/LinksCanvas/LinksCanvas.js",[],"/Users/huangjin/Documents/work/person-project/react-mind-map/src/components/Toolbar/Toolbar.tsx",[],{"ruleId":"175","severity":1,"message":"176","line":46,"column":34,"nodeType":"177","messageId":"178","endLine":46,"endColumn":39},{"ruleId":"179","severity":1,"message":"180","line":9,"column":8,"nodeType":"177","messageId":"178","endLine":9,"endColumn":16},{"ruleId":"181","severity":1,"message":"182","line":52,"column":6,"nodeType":"183","endLine":52,"endColumn":8,"suggestions":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"181","severity":1,"message":"189","line":12,"column":66,"nodeType":"183","endLine":12,"endColumn":87,"suggestions":"190"},{"ruleId":"185","replacedBy":"191"},{"ruleId":"187","replacedBy":"192"},{"ruleId":"179","severity":1,"message":"193","line":34,"column":24,"nodeType":"177","messageId":"178","endLine":34,"endColumn":36},{"ruleId":"185","replacedBy":"194"},{"ruleId":"187","replacedBy":"195"},{"ruleId":"181","severity":1,"message":"196","line":15,"column":6,"nodeType":"183","endLine":15,"endColumn":8,"suggestions":"197"},{"ruleId":"181","severity":1,"message":"198","line":47,"column":6,"nodeType":"183","endLine":47,"endColumn":19,"suggestions":"199"},{"ruleId":"181","severity":1,"message":"200","line":17,"column":6,"nodeType":"183","endLine":17,"endColumn":42,"suggestions":"201"},{"ruleId":"181","severity":1,"message":"202","line":17,"column":7,"nodeType":"203","endLine":17,"endColumn":15},{"ruleId":"181","severity":1,"message":"202","line":17,"column":17,"nodeType":"203","endLine":17,"endColumn":24},{"ruleId":"181","severity":1,"message":"204","line":31,"column":6,"nodeType":"183","endLine":31,"endColumn":58,"suggestions":"205"},{"ruleId":"181","severity":1,"message":"206","line":31,"column":36,"nodeType":"203","endLine":31,"endColumn":44},{"ruleId":"181","severity":1,"message":"206","line":31,"column":46,"nodeType":"203","endLine":31,"endColumn":53},{"ruleId":"181","severity":1,"message":"207","line":31,"column":53,"nodeType":"183","endLine":31,"endColumn":72,"suggestions":"208"},{"ruleId":"185","replacedBy":"209"},{"ruleId":"187","replacedBy":"210"},{"ruleId":"185","replacedBy":"211"},{"ruleId":"187","replacedBy":"212"},{"ruleId":"181","severity":1,"message":"213","line":37,"column":5,"nodeType":"183","endLine":37,"endColumn":18,"suggestions":"214"},{"ruleId":"181","severity":1,"message":"215","line":109,"column":5,"nodeType":"183","endLine":109,"endColumn":59,"suggestions":"216"},{"ruleId":"181","severity":1,"message":"217","line":115,"column":18,"nodeType":"177","endLine":115,"endColumn":29},{"ruleId":"181","severity":1,"message":"218","line":142,"column":5,"nodeType":"183","endLine":142,"endColumn":57,"suggestions":"219"},{"ruleId":"181","severity":1,"message":"220","line":163,"column":19,"nodeType":"177","endLine":163,"endColumn":26},{"ruleId":"181","severity":1,"message":"221","line":168,"column":6,"nodeType":"183","endLine":168,"endColumn":25,"suggestions":"222"},{"ruleId":"185","replacedBy":"223"},{"ruleId":"187","replacedBy":"224"},{"ruleId":"181","severity":1,"message":"225","line":107,"column":78,"nodeType":"183","endLine":109,"endColumn":4,"suggestions":"226"},{"ruleId":"181","severity":1,"message":"189","line":42,"column":81,"nodeType":"183","endLine":42,"endColumn":106,"suggestions":"227"},{"ruleId":"181","severity":1,"message":"228","line":50,"column":6,"nodeType":"183","endLine":50,"endColumn":60,"suggestions":"229"},{"ruleId":"181","severity":1,"message":"230","line":58,"column":6,"nodeType":"183","endLine":58,"endColumn":31,"suggestions":"231"},{"ruleId":"185","replacedBy":"191"},{"ruleId":"187","replacedBy":"192"},"@typescript-eslint/no-unused-vars","'clear' is assigned a value but never used.","Identifier","unusedVar","no-unused-vars","'stackGet' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'nodeRefs' and 'portRefs'. Either include them or remove the dependency array.","ArrayExpression",["232"],"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"React Hook useMemo has a missing dependency: 'pathOptions'. Either include it or remove the dependency array.",["235"],["233"],["234"],"'onAddHistory' is assigned a value but never used.",["233"],["234"],"React Hook useEffect has missing dependencies: 'id', 'inputs', 'onNodeRemove', and 'outputs'. Either include them or remove the dependency array. If 'onNodeRemove' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["236"],"React Hook useEffect has missing dependencies: 'id' and 'onMount'. Either include them or remove the dependency array. Mutable values like 'ref.current' aren't valid dependencies because mutating them doesn't re-render the component.",["237"],"React Hook useCallback has missing dependencies: 'canvas', 'onPortRegister', and 'ports'. Either include them or remove the dependency array. If 'onPortRegister' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["238"],"React Hook useCallback has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","UnaryExpression","React Hook useEffect has missing dependencies: 'canvas', 'nodes', and 'ref'. Either include them or remove the dependency array. Mutable values like 'ref.current' aren't valid dependencies because mutating them doesn't re-render the component.",["239"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","React Hook useEffect has a missing dependency: 'calculateBBox'. Either include it or remove the dependency array. Mutable values like 'canvasRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["240"],["233"],["234"],["233"],["234"],"React Hook useCallback has a missing dependency: 'ref'. Either include it or remove the dependency array. Mutable values like 'ref.current' aren't valid dependencies because mutating them doesn't re-render the component.",["241"],"React Hook useCallback has a missing dependency: 'targetRef'. Either include it or remove the dependency array. Mutable values like 'targetRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["242"],"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","React Hook useCallback has unnecessary dependencies: 'dragEndHandlerRef.current' and 'targetRef.current'. Either exclude them or remove the dependency array. Mutable values like 'targetRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["243"],"The ref value 'targetRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'targetRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has missing dependencies: 'onDrag', 'onDragEnd', 'onDragStart', and 'targetRef'. Either include them or remove the dependency array. Mutable values like 'targetRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["244"],["233"],["234"],"React Hook useCallback has a missing dependency: 'initialPresent'. Either include it or remove the dependency array.",["245"],["246"],"React Hook useEffect has an unnecessary dependency: 'pathRef.current'. Either exclude it or remove the dependency array. Mutable values like 'pathRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["247"],"React Hook useCallback has a missing dependency: 'link'. Either include it or remove the dependency array.",["248"],{"desc":"249","fix":"250"},"no-global-assign","no-unsafe-negation",{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},"Update the dependencies array to be: [nodeRefs, portRefs]",{"range":"279","text":"280"},"Update the dependencies array to be: [from, to, pathOptions]",{"range":"281","text":"282"},"Update the dependencies array to be: [id, inputs, onNodeRemove, outputs]",{"range":"283","text":"284"},"Update the dependencies array to be: [id, onMount]",{"range":"285","text":"286"},"Update the dependencies array to be: [canvas, inputs, onPortRegister, outputs, ports]",{"range":"287","text":"288"},"Update the dependencies array to be: [onNodeRegister, id, ref, canvas, nodes]",{"range":"289","text":"290"},"Update the dependencies array to be: [calculateBBox]",{"range":"291","text":"292"},"Update the dependencies array to be: [ref]",{"range":"293","text":"294"},"Update the dependencies array to be: [info, targetRef]",{"range":"295","text":"296"},"Update the dependencies array to be: [info]",{"range":"297","text":"298"},"Update the dependencies array to be: [onDrag, onDragEnd, onDragStart, targetRef]",{"range":"299","text":"300"},"Update the dependencies array to be: [initialPresent]",{"range":"301","text":"302"},"Update the dependencies array to be: [inputPoint, outputPoint, pathOptions]",{"range":"303","text":"304"},"Update the dependencies array to be: [link.label, inputPoint, outputPoint]",{"range":"305","text":"306"},"Update the dependencies array to be: [link, onDelete]",{"range":"307","text":"308"},[2069,2071],"[nodeRefs, portRefs]",[414,435],"[from, to, pathOptions]",[551,553],"[id, inputs, onNodeRemove, outputs]",[1509,1522],"[id, onMount]",[607,643],"[canvas, inputs, onPortRegister, outputs, ports]",[1058,1110],"[onNodeRegister, id, ref, canvas, nodes]",[1290,1309],"[calculateBBox]",[843,856],"[ref]",[2766,2820],"[info, targetRef]",[3701,3753],"[info]",[4557,4576],"[onDrag, onDragEnd, onDragStart, targetRef]",[2186,2204],"[initialPresent]",[1926,1951],"[inputPoint, outputPoint, pathOptions]",[2168,2222],"[link.label, inputPoint, outputPoint]",[2362,2387],"[link, onDelete]"]